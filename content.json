{"meta":{"title":"瓦力工厂-编程训练营","subtitle":"Scratch编程 Ardunio机器人搭建 Python自动化","description":"点点滴滴在编程","author":"王俊杰","url":"http://yoursite.com"},"pages":[{"title":"about","date":"2018-12-24T07:09:27.000Z","updated":"2018-12-24T07:09:27.821Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-12-24T07:03:23.000Z","updated":"2018-12-24T08:07:39.570Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-24T08:33:28.000Z","updated":"2018-12-24T08:33:28.536Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Python零基础快速入门趣味教程001-神秘朋友","slug":"瓦力工厂/Python零基础快速入门趣味教程001","date":"2018-12-24T12:11:53.116Z","updated":"2018-12-24T12:11:53.116Z","comments":true,"path":"2018/12/24/瓦力工厂/Python零基础快速入门趣味教程001/","link":"","permalink":"http://yoursite.com/2018/12/24/瓦力工厂/Python零基础快速入门趣味教程001/","excerpt":"","text":"Python 自带了一个非常有趣的 海龟绘图程序 (turtle)，它是本系列课程的主角。 在 终端中输入中，新建一个项目，然后在代码编辑器中输入anaconda-navigator，启动anaconda平台，在平台上点击jupyter打开jupyter-notebooks。 123import turtleturtle.shape(&quot;turtle&quot;)turtle.exitonclick() 点击 Shift+Enter 运行这段代码，便可以召唤出这位可爱的小精灵,上面的代码中 import turtle 用于导入模块，导入之后就可以应用模块的各种功能了turtle.shape(“turtle”) 调用 turtle 的 shape 方法，用于改变海龟的显示方式（默认显示的是一个三角形的小箭头）。执行这句代码之后，turtle 显示为一只形象的小海龟。turtle.exitonclick() 最后这句是告诉海龟保持住，直到遇到鼠标点击的时候才退出 (exit on click)。不然程序执行得太快，我们还来不及看到海龟，它就已经执行完毕并退出了。 提示请不要直接复制、粘贴代码，而是要对照着代码，自己在代码编辑器中一点一点地输入Python 是大小写敏感的编程语言，输入代码时，请务必细心，注意字母大小写Python 相比其他高级编程语言的一个特别之处，在于强制使用缩进，请不要在每行代码的开头随意添加空白字符（空格、Tab 键等） 现在小海龟位于窗体的正中央，龟头指向右边的方向。 接下来，我们尝试让海龟走两步。 关闭窗口（或点击窗体任何位置自动退出），将编辑器中的代码，更改为下面的样子 1234import turtleturtle.shape(&quot;turtle&quot;)turtle.forward(200)turtle.exitonclick() 我们看到小海龟从屏幕中心出发，沿着龟头的方向（右边），爬行（前进）了一段距离。 这次的代码，跟最开始的代码并没有太多的不同，只增加了 1 条语句 turtle.forward(200) 它的意思就是让海龟沿着当前龟头的指向，前进 200 个单位的距离。刚才我们已经学会了如何让海龟爬行，接着我们再来看如何让海龟转身。 12345import turtleturtle.shape(&quot;turtle&quot;)turtle.left(45)turtle.forward(200)turtle.exitonclick() 这一次，在海龟出发之前（位于窗体正中央，龟头向右），我们先通过 turtle.left(45) 让海龟向左（逆时针）旋转 45 度。此时，海龟仍然位于窗体正中央，但龟头指向屏幕右上方。接着，再让海龟沿着更改后的龟头方向爬行，turtle.forward(200) ，于是就就画出了指向屏幕右上方的一条线段。 练习 1234567891011import turtleturtle.shape(&quot;turtle&quot;)turtle.left(90)turtle.forward(200)turtle.left(90)turtle.forward(200)turtle.left(90)turtle.forward(200)turtle.left(90)turtle.forward(200)turtle.exitonclick() 12345678910111213141516171819202122232425262728import turtleturtle.shape(&quot;turtle&quot;)turtle.left(15)turtle.forward(200)turtle.left(90)turtle.forward(200)turtle.left(90)turtle.forward(200)turtle.left(90)turtle.forward(200)turtle.left(105)turtle.forward(200)turtle.left(90)turtle.forward(200)turtle.left(90)turtle.forward(200)turtle.left(90)turtle.forward(200)turtle.left(120)turtle.forward(200)turtle.left(90)turtle.forward(200)turtle.left(90)turtle.forward(200)turtle.left(90)turtle.forward(200)turtle.left(90)turtle.exitonclick()","categories":[{"name":"Python 入门","slug":"Python-入门","permalink":"http://yoursite.com/categories/Python-入门/"}],"tags":[]},{"title":"Python零基础快速入门趣味教程002-变量","slug":"瓦力工厂/Python零基础快速入门趣味教程002","date":"2018-12-24T08:09:53.519Z","updated":"2018-12-24T08:09:53.519Z","comments":true,"path":"2018/12/24/瓦力工厂/Python零基础快速入门趣味教程002/","link":"","permalink":"http://yoursite.com/2018/12/24/瓦力工厂/Python零基础快速入门趣味教程002/","excerpt":"","text":"大家在中学就已经学过变量的概念了。例如：我们令 x = 100，则可以推出 x*2 = 200 试试下面这段 Python 代码1234567import turtleturtle.shape(&quot;turtle&quot;)x = 100turtle.forward(x)turtle.left(45)turtle.forward(2*x)turtle.exitonclick() 运行上面的代码，小海龟将画出下面的图案: x = 100 声明了变量 x，并将它赋值为 100，用大家熟悉的中学数学语言来说，就是“令 x 等于 100” 接下来的代码中 turtle.forward(x) 就是让海龟前进 x 个单位的距离，由于前面已经将 x 赋值为 100，所以实际上就是让海龟前进 100 个单位的距离（图像中那条较短的水平线） 类似地 turtle.forward(2*x) 就是让海龟前进 2 倍的 x 个单位的距离，即前进 2 倍的 100 个单位的距离，最终海龟会向前爬行 2 x 100 = 200 个单位的距离 （图像中指向右上方的那条较长的斜线） 提示Python (以及大多数编程语言) 中用 * 表示数学的乘法运算，以免和字母 x 相混淆与中学数学不同的是，Python 中的变量不仅可以用来表示数字，还可以用来表示各种非数字的东西。例如，通过 wali= turtle 你可以将咪博士变身为一只海龟，然后你就可以用wali 这个变量控制海龟画图啦。 12345678910import turtlewali = turtlewali.shape(&quot;turtle&quot;)x = 100wali.forward(x)wali.left(45)wali.forward(2*x)wali.exitonclick() 练习尝试画个房子（使用变量来完成，尝试调整变量的值，绘制出不同大小的房子） 提示你可能会需要用到开根号的运算，引入 math 模块，然后使用 math 模块的 sqrt 方法可以进行开根号的运算。例如，下面的代码，计算 5 的平方根，并将计算结果赋值给变量 x 12import mathx = math.sqrt(5) 123456789101112131415161718192021import turtleimport mathturtle.shape(&quot;turtle&quot;)line=150turtle.left(90)turtle.forward(line)turtle.left(90)turtle.forward(line)turtle.left(90)turtle.forward(line)turtle.left(90)turtle.forward(line)turtle.left(135)turtle.forward(math.sqrt(2)*line)turtle.right(90)turtle.forward(math.sqrt(2)*line/2)turtle.right(90)turtle.forward(math.sqrt(2)*line/2)turtle.right(90)turtle.forward(math.sqrt(2)*line)turtle.exitonclick()","categories":[{"name":"Python 入门","slug":"Python-入门","permalink":"http://yoursite.com/categories/Python-入门/"}],"tags":[]},{"title":"扫地机器人","slug":"瓦力工厂/DPJ-051-扫地机器人","date":"2018-12-22T10:10:21.391Z","updated":"2018-12-22T10:10:21.391Z","comments":true,"path":"2018/12/22/瓦力工厂/DPJ-051-扫地机器人/","link":"","permalink":"http://yoursite.com/2018/12/22/瓦力工厂/DPJ-051-扫地机器人/","excerpt":"","text":"情景任务:有一天瓦力放学回家，看妈妈在打扫卫生，特别辛苦，瓦理想，何不做一个扫地机器人帮妈妈分担家务呢？ 学习目标：学习目标：1.同时使用2个伺服马达2个伺服马达将线分别插在OUT1 OUT2，在编程时务必选择相对应端口。调好适当的角度。2.利用前面学到的遥控器组合键完成清扫任务。3.连杆结构完成任务。 知识点拓展：任务分解：１．需要外界能量提供动力 ２．需要有轮子。 ３．需要有抬起放下手臂的执行原件。 器材分解：电池盒、CPU、轮子、马达、伺服马达、遥控器。 构建步骤： 扫地机器人程序设计： 扫地机器人完成了，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"Python零基础快速入门趣味教程003-循环","slug":"瓦力工厂/Python零基础快速入门趣味教程003","date":"2018-12-21T07:29:42.207Z","updated":"2018-12-21T07:29:42.207Z","comments":true,"path":"2018/12/21/瓦力工厂/Python零基础快速入门趣味教程003/","link":"","permalink":"http://yoursite.com/2018/12/21/瓦力工厂/Python零基础快速入门趣味教程003/","excerpt":"","text":"在前面的教程中，瓦力博士留了一道练习题给大家—-画正方形，相信聪明的你应该已经画出来了。 下面是瓦力博士实现的代码。 是不是跟你的代码很像呢？ 123456789101112import turtleturtle.forward(200)turtle.left(90)turtle.forward(200)turtle.left(90)turtle.forward(200)turtle.left(90)turtle.forward(200)turtle.left(90)turtle.exitonclick() 虽然这段代码可以成功绘制出一个正方形，但它还有些不足的地方。仔细观察，我们发现，有许多代码是重复的：第 3, 4 行的代码重复了 4 次。在编程的时候，我们要尽量避免重复的代码。遇到需要重复执行的语句，我们应当使用循环来实现。 下面是瓦力博士用循环重新实现的画正方形的功能。怎么样，代码是不是简洁许多了呢？但是好像看不太懂了？ 123456import turtlefor i in range(4): turtle.forward(200) turtle.left(90)turtle.exitonclick() 第 3, 4, 5 行就是一个循环，用于执行重复的语句。 其中，第 4, 5 行的代码和原来的版本”几乎”是一样的，它们是需要重复执行的语句，我们称之为循环体。不过，一定要注意的是，同原来的版本相比，第 4, 5 行的代码不是顶格写的，而是向右缩进了一些（所以是“几乎”一样，而不是完全相同），Python 正是根据缩进来推断哪些语句属于循环体。通常我们使用连续的 4 个空格符来表示一级的缩进。 第 3 行的代码是一个 for 循环。它的作用是重复执行循环体中的语句。可是要重复执行多少次呢？答案是 4 次。为什么？我们先来看 range 函数，range(n) 相当于产生一个从 0 到 n-1 的等差数列， 即 0, 1, 2…, n-1，总共 n 个数字。所以，这里的 range(4) 相当于数列 0, 1, 2, 3，总共是 4 个数字。 for i in range(4): 的意思就是每次循环从数列中取出 1 个数字，赋值给变量 i，直至取完数列中所有的数字，即 第 1 次循环的时候，i = 0第 2 次循环的时候，i = 1第 3 次循环的时候，i = 2第 4 次循环的时候，i = 3然后呢？然后循环就结束了，因为 range(4) 对应的数列只有 0, 1, 2, 3 这 4 个数字。这 4 个数字通过 4 次循环已经全部取完了。没数字可取了，所以循环也就结束了。因此，第 3 行的代码 for i in range(4): 将执行 4 次循环体（第 4， 5 行的代码） 最后，瓦力博士给大家展示一个更高级一点的例子—-嵌套循环，即循环体里面还有循环！ 1234567import turtlefor i in range(16): turtle.left(22.5) for j in range(4): turtle.forward(200) turtle.left(90)turtle.exitonclick() 练习先不要运行代码，尝试分析一下，上面这段代码会绘制出什么样的图案？让代码跑起来，看看你的分析是否正确。","categories":[],"tags":[]},{"title":"Python零基础快速入门趣味教程007-条件循环","slug":"瓦力工厂/Python零基础快速入门趣味教程007","date":"2018-12-21T07:29:35.622Z","updated":"2018-12-21T07:29:35.622Z","comments":true,"path":"2018/12/21/瓦力工厂/Python零基础快速入门趣味教程007/","link":"","permalink":"http://yoursite.com/2018/12/21/瓦力工厂/Python零基础快速入门趣味教程007/","excerpt":"","text":"条件循环能够让程序在条件成立时（即为真时）重复执行循环体中的语句。如果条件一直成立（即永远不会为假），则循环会一直进行下去，不会停止。如果初始时，条件不成立，则循环 1 次也不会执行。Python 中条件循环使用 while 关键字来实现。 看下面这段示例代码， 123456789101112import turtleturtle.shape(&quot;turtle&quot;)turtle.speed(0)def forward(max_distance): distance = 0 step = 1 while distance &lt; max_distance: turtle.forward(step) distance += stepforward(100)turtle.exitonclick() 函数 forward 实现的功能和原版的 turtle.forward 是一样的，但这里我们是借助条件循环来实现的。 第 5 行 turtle.speed(0) 设置海龟爬行的速度。速度的取值为 [0, 10]。当取值在 [1, 10] 之间时，数值越大，绘图的速度就越快。当取值为 0 时，海龟将以最快的速度绘图。这里，我们让海龟以最快的速度爬行。因为，在我们自定义的 forward 函数中（第 8-13 行），我们要让海龟移动很多步，但每次只移动 1 个很小的距离，为了尽快看到最终绘图的效果，我们得让海龟爬得快一些。 第 8 行 def forward(max_distance): 声明 forward 函数，它有 1 个参数 max_distance。这个函数要实现的功能是，让海龟一直爬行，直到海龟总的爬行距离达到（或超过） max_distance 时才停止爬行。 第 9 行 distance = 0 变量 distance 用于记录当前海龟已经累计爬行了多远的距离。初始时，海龟还没有开始爬行，因此 distance 的初始值为 0。 第 10 行 step = 1 设置海龟爬行的步长，即每 1 步要爬多远的距离。 第 11-13 行是用 while 语句实现的条件循环，其中第 11 行， while distance &lt; max_distance: 指明了循环条件为 distance &lt; max_distance 即，当海龟累计爬行距离 (distance) 小于规定的最大爬行距离 (max_distance) 时，执行循环体中的语句（第 12, 13 行）。 第 12, 13 行是循环体，其中第 12 行 turtle.forward(step) 让海龟以指定步长 step 前进一小段距离。第 13 行 distance += step 这是一种简写的形式，它等价于 distance = distance + step ，即将海龟刚才（第 12 行）爬行的那一小段距离累加到 distance 变量中。类似 for 循环，while 循环的循环体（第 12, 13 行）也要比 while 语句所在的行（第 11 行），向右缩进一些，通常我们用连续的 4 个空格来表示一级的缩进。 不过，现在的 forward 跟原版的 turtle.forward 效果是一样的，没啥意思，瓦力博士把代码改进一下，让它变得好玩一些。 1234567891011121314151617181920212223import turtleturtle.shape(&quot;turtle&quot;)turtle.speed(0)def forward(max_distance, max_radius): distance = 0 step = 1 while distance &lt; max_distance: if turtle.distance(0,0) &gt;= max_radius: angle = turtle.towards(0,0) turtle.setheading(angle) turtle.forward(step) distance += stepforward(550, 100)turtle.exitonclick() 再次运行程序，你会看到海龟在一条直线上折返爬行。 第 8 行 def forward(max_distance, max_radius): 我们为 forward 函数引入了一个新的参数 max_radius。后面，我们要实现的功能是当海龟离开原点的距离达到（或超过） max_radius 时，就调头往回爬，即往复爬行。 实现往复爬行对应的代码在第 12-14 行。 第 12 行 if turtle.distance(0,0) &gt;= max_radius: ，其中 turtle.distance(0,0) 返回的是海龟与原点 (0, 0) 的距离。因此，当海龟与原点的距离达到或超过 max_radius 时，if 条件成立，程序将执行相应的语句（第 13, 14 行）。 第 13 行 angle = turtle.towards(0,0) ，其中 turtle.towards(0,0) 返回的是海龟朝向原点 (0, 0) 的角度。计算角度时，水平向右为 0 度，逆时针方向为角度增大的方向。 第 14 行 turtle.setheading(angle) 直接设定海龟的朝向，由于前面（第 13 行），将 angle 的值设置为海龟朝向原点的角度，所以这里经过 setheading 设置之后，海龟将朝向原点的方向。因此，后面再调用 turtle.forward （第 15 行），海龟就会往原点的方向移动，即往回爬行。 现在，海龟能够在一条直线上往复爬行，虽然比之前改进了一些，但还是显得比较单调。接下来，瓦力博士再进一步改进代码，让它变得更生动一些。 123456789101112131415161718192021222324import turtleimport randomturtle.shape(&quot;turtle&quot;)turtle.speed(0)def forward(max_distance, max_radius): distance = 0 step = 1 while distance &lt; max_distance: if turtle.distance(0,0) &gt;= max_radius: angle = turtle.towards(0,0) + random.randint(-45, 45) turtle.setheading(angle) turtle.forward(step) distance += stepforward(10000, 100)turtle.exitonclick() 运行上面的代码，你会看到海龟随机地往返爬行。刚开始，你看不出什么规律，但等它爬行一段时间之后，你会发现海龟实际上是被限制在一个圆圈当中运动。 第 2 行 import random 导入 random 模块，用于生成随机数。 第 14 行 angle = turtle.towards(0,0) + random.randint(-45, 45) 其中的 random.randint(-45, 45) 用于产生 [-45, 45] 之间的随机整数，将这个随机整数加到朝向原点的角度上，这样海龟就不再精确地朝向原点，而是有一个随机波动的角度。因此，海龟就不再精确地按原路返回，从而摆脱直线的束缚。 但是，原来的 2 个约束依然存在： 海龟离开原点的距离不能超过 max_radius（第 13 行），所以它被限制在一个圆圈中运动海龟总的运动距离不能超过 max_distance （第 12 行），所以它最终会停止运动","categories":[],"tags":[]},{"title":"Python零基础快速入门趣味教程006-条件","slug":"瓦力工厂/Python零基础快速入门趣味教程006","date":"2018-12-21T07:28:15.282Z","updated":"2018-12-21T07:28:15.282Z","comments":true,"path":"2018/12/21/瓦力工厂/Python零基础快速入门趣味教程006/","link":"","permalink":"http://yoursite.com/2018/12/21/瓦力工厂/Python零基础快速入门趣味教程006/","excerpt":"","text":"前面的教程中，我们已经可以让小海龟绘制出各种图形了。但是，所有绘图的代码都是预先编好的，程序一旦运行起来，运行结果（绘制的图形）就是固定不变的。这一节中，瓦力博士将教大家如何让海龟响应用户的输入。12345678910111213import turtledef move(): direction = turtle.textinput(&apos;Input direction&apos;, &apos;Go left or right?&apos;) if direction == &apos;left&apos;: turtle.left(60) turtle.forward(100) if direction == &apos;right&apos;: turtle.right(60) turtle.forward(100)move()turtle.exitonclick() 程序运行起来之后，会先弹出一个输入框，询问你海龟的运动方向。你可以输入 left 或者 right。 当你按下 ok 按钮之后，海龟就会根据你的输入（left 或 right），相应地向左或向右运动。 这个例子中，程序的运行结果不完全取决于事先编写的代码，它还和你的输入有关。 第 5 行 direction = turtle.textinput(‘Input direction’, ‘Go left or right?’) 弹出一个输入框。输入框（窗口）的标题是 Input direction，输入框的提示文字为 Go left or right?。 当用户完成输入点击 ok 按钮时，变量 direction 将获得用户输入的值。当用户点击 cancel 按钮时，变量 direction 的值为 None （None 为Python 中的关键字，表示什么也没有的意思）。第 7, 8, 9 行称为条件语句。每个 if 语句（第 7 行）表示一个条件，它只有 2 种情况：要么成立（为真，值为 True），要么不成立（为假，值为 False）。 第 7 行 if direction == ‘left’: 对应的条件是判断变量 direction 与字符串 ‘left’ 是否相等。如果相等则执行第 8, 9 行的代码，否则就不执行第 8, 9 行的代码。 翻译成大白话就像下面这样123如果变量 direction 等于 left，则执行下面的语句 turtle.left(60) turtle.forward(100) 所以，当用户输入 left，并点击 ok 按钮时，direction 接收到用户的输入 left，它的值等于 left，海龟就先向左转 60 度（执行第 8 行代码），再前进 100 个单位（执行第 9 行代码）。 要注意的是 Python 中比较 2 个东西是否相等，要用 == （即 2 个连续的等号），因为单独的 = （等号）在 Python 中表达的是将某个值赋值给某个变量的意思，因此，比较是否相等就得用另外的符号（即 ==）了。 另外，还要注意缩进，第 8, 9 行的代码要比 if 语句所在的行（第 7 行），向右缩进一些。这样 Python 才知道，当 if 语句为真时（即条件成立时），需要执行哪些代码。和瓦力博士在前面的教程中谈到的一样，我们一般用连续的 4 个空格符号来表示一级的缩进。 第 11, 12, 13 行也是条件语句，它们和第 7, 8, 9 行代码类似，只不过条件成立的条件改成了变量 direction 的值等于 right。 if 语句还有其他一些语法。下面，瓦力博士给大家展示的是 if … else 的语法。 123456789101112131415import turtledef move(): direction = turtle.textinput(&apos;Input direction&apos;, &apos;Go left or right?&apos;) if direction == &apos;left&apos;: turtle.left(60) turtle.forward(100) else: turtle.right(60) turtle.forward(100)move()turtle.exitonclick() 将 7-12 行的代码翻译成大白话就像下面这样， 123456 如果变量 direction 等于 left，则执行下面的语句 turtle.left(60) turtle.forward(100)否则，执行下面的语句 turtle.right(60) turtle.forward(100) 注意体会前后 2 个版本细微的差别。考虑用户输入一个既不是 left 也不是 right 的字符串（或者直接点击 cancel 按钮）。 前一个版本中，海龟不会发生运动。因为此时， if direction == ‘left’: 不成立， if direction == ‘right’: 也不成立，所有的绘图代码都没有机会执行。 后一个版本中，海龟会往右下方向运动。因为，后一个版本只检查 if direction == ‘left’: 是否成立。当该条件不成立时，不论变量 direction 的值是多少，它都会执行 else 对应的语句。 要实现和第 1 个版本一样的效果，我们可以用 if … elif 这样的语法。 123456789101112 import turtledef move(): direction = turtle.textinput(&apos;Input direction&apos;, &apos;Go left or right?&apos;) if direction == &apos;left&apos;: turtle.left(60) turtle.forward(100) elif direction == &apos;right&apos;: turtle.right(60) turtle.forward(100)move()turtle.exitonclick() 这个版本中，程序会依次， 先检查 if direction == ‘left’: （第 7 行）的条件，如果成立则执行相应的代码（第 8, 9 行），并忽略剩余的其他条件。如果不成立，则顺次检查下一个条件 if direction == ‘right’: （第 10 行）。类似地，如果该条件成立，则执行相应的代码（第 11, 12 行），并忽略剩余的其他条件，否则再顺次检查下一个条件。这样一直重复下去，直至没有可检查的条件为止。虽然，第 3 个版本和第 1 个版本，最终呈现的效果是一模一样的，但它们的内部的执行过程，仍然有细微的差别。 第 1 个版本中，程序一定会检查条件 if direction == ‘right’: 是否成立，无论前一个条件 if direction == ‘left’: 是否成立。最后一个版本中，程序只有在前一个条件 if direction == ‘left’: 不成立的时候，才会检查条件 if direction == ‘right’: 是否成立。因此，虽然最终的效果是一样的，但从执行效率上来看，最后一个版本要略微高效一些。","categories":[],"tags":[]},{"title":"Python零基础快速入门趣味教程005-参数","slug":"瓦力工厂/Python零基础快速入门趣味教程005","date":"2018-12-21T07:27:39.919Z","updated":"2018-12-21T07:27:39.919Z","comments":true,"path":"2018/12/21/瓦力工厂/Python零基础快速入门趣味教程005/","link":"","permalink":"http://yoursite.com/2018/12/21/瓦力工厂/Python零基础快速入门趣味教程005/","excerpt":"","text":"上一个教程中，瓦力博士带大家学习了函数的使用。例如，line_without_moving 函数，可以让海龟先画出一条线段，然后再回来起点。123def line_without_moving(): turtle.forward(100) turtle.backward(100) 但是，这个函数还是有一些局限性的。譬如，海龟所画线段的长度是固定的，这样就显得不够灵活。那么有什么办法，让函数变得更灵活一些呢？答案就是使用参数。123def line_without_moving(length): turtle.forward(length) turtle.backward(length) 对比前后 2 段代码，新版的 line_without_moving 在函数声明的地方（第 1 行），在小括号里面写上了 length；又将函数体中（第 2, 3 行）的数字 100 替换成 length。这里的 length 就称为函数的参数，我们在函数调用时，可以向函数参数传递不同的值，这样函数体中用到 length 参数的地方，也就间接地用到我们提供的值啦。 123456789101112131415import turtledef line_without_moving(length): turtle.forward(length) turtle.backward(length)line_without_moving(100)turtle.right(90)line_without_moving(150)turtle.right(90)line_without_moving(200)turtle.right(90)line_without_moving(250)turtle.exitonclick() 运行上面这段画十字型的代码，我们看到构成十字型的 4 条线段长短不一。这是因为我们在调用 line_without_moving 函数时，使用了不同的参数（第 9, 11, 13, 15 行）。 关于函数参数，瓦力博士要提醒大家的是，函数参数只能在本函数内部（即本函数体中）使用。函数之外，函数参数就无效了。例如，函数 line_without_moving 的参数 length 就只能在 line_without_moving 函数中使用，你不能在其他的地方使用它。 还记得上个教程中，瓦力博士给大家留的那个画蜂巢的作业吗？聪明的你，是不是已经画出来了呢？ 下面是瓦力博士的代码，代大家参考。 12345678910111213141516import turtledef hexagon(): for i in range(6): turtle.forward(50) turtle.left(60)def honeycomb(): for i in range (6): hexagon() turtle.forward(50) turtle.right(60)honeycomb()turtle.exitonclick() 现在，蜂巢的大小的固定的。使用这节课的知识，通过函数参数，我们可以很方便地控制蜂巢的大小。 下面是瓦力博士改进后的代码。通过参数 size，我们可以自由地控制蜂巢的大小。 1234567891011121314151617import turtledef hexagon(size): for i in range(6): turtle.forward(size) turtle.left(60)def honeycomb(size): for i in range (6): hexagon(size) turtle.forward(size) turtle.right(60)honeycomb(80)turtle.exitonclick() 参数的传递过程如下： 第 14 行，我们在调用函数 honeycomb 时，将 80 传递给了 honeycomb 的参数 size函数 honeycomb 接受了 80 这个参数值（第 8 行），因此函数 honeycomb 中，所有使用到参数 size 的地方（第 10, 11 行），都得到了 80 这个值函数 honeycomb 中，又将 80 这个值传递给被调用的函数，第 10 传递给函数 hexagon, 第 11 行传递给函数 turtle.forward函数 hexagon 接受了 80 个参数值（第 3 行），因此函数 hexagon 中，所有使用到参数 size 的地方（第 5 行），都得到了 80 这个值……这里，瓦力博士要提醒大家的是：函数 hexagon 和 honeycomb 中都有参数 size，这 2 个 size 虽然同名，而且在参数传递的过程中，都被赋予相同的值（80），但它们不是同一个参数！hexagon 中的参数 size，其作用域（即有效范围）是第 3-6 行；honeycomb 中的参数 size，其作用域是第 8-12 行。 练习尝试编写一个带参数的函数，实现任意正多边形的绘制 提示设计一个名为 draw_polygon 的函数来绘制任意正多边形draw_polygon 接受 2 个参数 sides 和 length（多个参数之间用英文逗号分隔）sides 用于控制正多边形的边数（内角）length 用于控制正多边的边长（大小） 12def draw_polygon(sides, length): pass","categories":[],"tags":[]},{"title":"Python零基础快速入门趣味教程004-函数","slug":"瓦力工厂/Python零基础快速入门趣味教程004","date":"2018-12-21T03:50:39.709Z","updated":"2018-12-21T03:50:39.709Z","comments":true,"path":"2018/12/21/瓦力工厂/Python零基础快速入门趣味教程004/","link":"","permalink":"http://yoursite.com/2018/12/21/瓦力工厂/Python零基础快速入门趣味教程004/","excerpt":"","text":"什么样的程序员才是优秀的程序员？瓦力博士认为“慵懒”的程序员才是真正优秀的程序员。听起来不合逻辑？真正优秀的程序员知道如何高效地工作，而不是用不止境的加班来完成工作任务。函数便是程序员高效工作的利器之一。 事实上，在前面的教程中，我们已经在使用函数了。例如，我们在每段代码的最后，都会调用 turtle.exitonclick() 函数。exitonclick 函数的作用就是让海龟画完图像之后保持住，不要退出，直到我们点击窗口的时候 (onclick)，才退出 (exit)。我们不需要知道函数 exitonclick 具体是怎样实现的，我们只需要在合适的地方调用它，使用它提供的功能就可以了。使用函数便是程序员高效工作的秘密（之一）。 那么，我们要如何定义自己的函数呢？ Python 中，我们使用 def 关键字来定义函数。请看下面这个例子：123def line_without_moving(): turtle.forward(100) turtle.backward(100) 跟在关键字 def 之后的是函数名 line_without_moving。后面，我们就可以用 line_without_moving 这个函数名来调用它了。函数名之后，需要有一个冒号，告诉 python 接下来就是函数的具体内容（称为函数体）。 函数的功能就是通过函数体中的语句来实现的。注意到，函数体中的语句 (第2, 3 行) 和 def 所在的行 (第 1 行) 相比，要往右缩进了一些。Python 正是通过缩进来判断哪些语句是属于函数体中的语句（类似前面教程中谈到的，Python 用缩进来判断哪些语句属于循环体）。通常，我们用 4 个空格符来表示一级的缩进。 好了，让我们仔细看看 line_without_moving 的函数体（第 2, 3 行），看看这个函数实现的是什么功能？ turtle.forward(100) 前进 100 个单位距离， turtle.backward(100) 后退 100 个单位的距离，这一进一退，小海龟又回到了原来的位置，这不等于啥也没干吗？No No No！海龟虽然又回到的原来的位置，但它在爬行过程中，会在屏幕上留下痕迹，即画出线条。因此，line_without_moving 这个函数的作用就是让海龟沿着当前方向绘制一条长度为 100 个单位的线条，然后还要回到起始的位置，同时保持龟头的方向不变。 上面的代码，仅仅是定义了函数 line_without_moving。光定义函数是看不到直接的效果的，函数需要被使用（即被调用），函数体中的代码才能被执行，我们才能看到效果。例如，下面的代码，我们在 line_without_moving 函数定义之后，调用了它（第 7, 9, 11, 13 行）。调用方式为函数名之后，跟一个小括号。这样，我们就能看到函数调用之后的效果了。 1234567891011121314import turtledef line_without_moving(): turtle.forward(100) turtle.backward(100)line_without_moving()turtle.right(90)line_without_moving()turtle.right(90)line_without_moving()turtle.right(90)line_without_moving()turtle.exitonclick() 运行上面的代码，我们可以看到一个十字型的图案。 类似循环可以嵌套一样，函数也可以嵌套。上面画十字型的代码，还可以改写成下面的形式。 1234567891011121314151617import turtledef line_without_moving(): turtle.forward(100) turtle.backward(100)def draw_cross(): line_without_moving() turtle.right(90) line_without_moving() turtle.right(90) line_without_moving() turtle.right(90) line_without_moving()draw_cross()turtle.exitonclick() 第 7-14 行，定义了一个新的函数 draw_cross。第 16 行，调用 draw_cross 函数画十字，而 draw_cross 函数内部又调用了 line_without_moving 函数（第 8, 10, 12, 14 行），即函数嵌套函数。 进一步观察，我们发现 8-14 行的代码有许多是重复的。第 8, 9 行的代码，重复了 4 次。结合前面瓦力博士讲的循环，聪明的你是不是已经想到了如何进一步简化代码了呢？下面是瓦力博士给出的参考代码，是不是和你想的一样呢？ 1234567891011121314import turtledef line_without_moving(): turtle.forward(100) turtle.backward(100)def draw_cross(): for i in range(4): line_without_moving() turtle.right(90)draw_cross()turtle.exitonclick() 练习 提示 蜂窝是由一系列的正六边形构成的，先编写一个绘制正六边的函数，再通过多次函数调用的方式绘制出多个正六边形设计正六边形函数的时候，要让海龟在画完正六边形之后，再次回到起始的位置，并保持龟头方向不变，这样方便我们拼接多个正六边形构成蜂窝的图案在考虑如何用多个正六边形构成蜂窝时，请忽略绘制正六边形的细节（请忘记龟头转了几度，海龟前进了多少距离等细节 ），只需要知道海龟在绘制单个正六边形时的旋转方向（顺时针还是逆时针），并且海龟在绘制正六边形之后，会回到起始的位置，并保持龟头方向不变在函数调用时忽略函数内部的细节，这事实上就是一种抽象的思维，函数不仅是程序员“偷懒”的工具，更是程序员通过抽象思维，实现复杂逻辑的利器。","categories":[],"tags":[]},{"title":"XKL-044-手弩","slug":"瓦力工厂/XKL-044-手弩","date":"2018-12-20T03:19:50.020Z","updated":"2018-12-20T03:19:50.020Z","comments":true,"path":"2018/12/20/瓦力工厂/XKL-044-手弩/","link":"","permalink":"http://yoursite.com/2018/12/20/瓦力工厂/XKL-044-手弩/","excerpt":"","text":"情景任务:《诸葛亮传》：“亮性长于巧思，损益连弩，木牛流马，皆出其意。推演兵法，作八阵图，咸得其要。”注引《魏氏春秋》曰：亮作八务、七戒、六恐、五惧，皆有条章，以训厉臣子。又损益连弩，谓之元戎，以铁为矢，矢长八寸，一弩十矢俱发。”皆出其意，即指诸葛亮的创意、构思、设计，而由他人具体制作。 学习目标 ：1.了解弹力，作用力与反作用力。2.了解棘轮、棘爪结构。 知识点拓展：作用力与反作用力：在经典力学里，牛顿第三定律（Newton’s third law）表明，当两个物体互相作用时，彼此施加于对方的力，其大小相等、方向相反。力必会成双结对地出现：其中一道力称为“作用力”；而另一道力则称为“反作用力”，又称“抗力”；两道力的大小相等、方向相反。它们之间的分辨，是纯然任意的；任何一道力都可以被认为是作用力，而其对应的力自然地成为伴随的反作用力。这成对的作用力与反作用力称为“配对力”。 棘轮机构：（ratchet and pawl），由棘轮和棘爪组成的一种单向间歇运动机构。棘轮机构常用在各种机床和自动机中间歇进给或回转工作台的转位上，也常用在千斤顶上。在自行车中棘轮机构用于单向驱动，在手动绞车中棘轮机构常用以防止逆转。棘轮机构工作时常伴有噪声和振动，因此它的工作频率不能过高。 构建步骤： 手弩已完成，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"fullstack-react-native","slug":"瓦力工厂/fullstack-react-native","date":"2018-12-18T14:27:13.621Z","updated":"2018-12-18T14:27:13.621Z","comments":true,"path":"2018/12/18/瓦力工厂/fullstack-react-native/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/fullstack-react-native/","excerpt":"","text":"Platform specific propertiesThe Platform API allows us to conditionally apply different styles or properties in our componentbased on the device’s operating system. The OS attribute of the object returns either iOS or androiddepending on the user’s device. Although this is a relatively simple way to apply different properties in our application based onthe user’s device, there may be scenarios where we may want our component to be substantiallydifferent between operating systems.We can also use the Platform.select method that takes the operating system as keys within anobject and returns the correct result based on the device: 1234567891011textStyle: &#123;textAlign: &apos;center&apos;,...Platform.select(&#123;ios: &#123;fontFamily: &apos;AvenirNext-Regular&apos;,&#125;,android: &#123;fontFamily: &apos;Roboto&apos;,&#125;,&#125;),&#125;, Separate filesInstead of applying conditional checks using Platform.OS a number times throughout the entirecomponent file, we can also leverage the use of platform specific files instead. We can createtwo separate files to represent the same component each with a different extension: .ios.js and.android.js . If both files export the same component class name, the React Native packager knowsto choose the right file based on the path extension. We’ll dive deeper into platform specificdifferences later in this book. Text inputWe now have text fields that display the location, weather condition, and temperature. The nextthing we need to do is provide some sort of input to allow the user to search for a specific city.Again, we’ll continue using hardcoded data for now. We’ll only begin using an API for real dataonce we have all of our components in place.React Native provides a built-in TextInput component that we can import into our componentthat allows us to accept user input. Let’s include it within our View container underneath the Textcomponents (make sure to import it as well!): 12345678910&lt;Text style=&#123;[styles.largeText, styles.textStyle]&#125;&gt;San Francisco&lt;/Text&gt;&lt;Text style=&#123;[styles.smallText, styles.textStyle]&#125;&gt;Light Cloud&lt;/Text&gt;&lt;Text style=&#123;[styles.largeText, styles.textStyle]&#125;&gt;24°&lt;/Text&gt;&lt;TextInputautoCorrect=&#123;false&#125;placeholder=&quot;Search any city&quot;placeholderTextColor=&quot;white&quot;style=&#123;styles.textInput&#125;clearButtonMode=&quot;always&quot;/&gt; There are a number of props associated with TextInput that we can use. We’ll cover the basicshere but go into more detail about them in the “Core Components” chapter. Here we’re specifyinga placeholder, its color, as well as a style for the component itself. Let’s create its style object,textInput , underneath our other styles: 12345678910111213smallText: &#123;fontSize: 18,&#125;,textInput: &#123;backgroundColor: &apos;#666&apos;,color: &apos;white&apos;,height: 40,width: 300,marginTop: 20,marginHorizontal: 20,paddingHorizontal: 10,alignSelf: &apos;center&apos;,&#125;, As we mentioned previously, all the attributes that we provide styles with in React Native areextremely similar to how we would apply them using CSS. Now let’s take a look at our application: We can see that the text input has a default underline on Android. We’ll go over how to remove thisin a bit.We’ve also specified the clearButtonMode prop to be always . This shows a button on the right sideof the input field when characters are inserted that allows us to clear the text. This is only availableon iOS. If you’re using the iOS simulator, you can connect your hardware keyboard and use that withany input field. This can be done with Shift + ⌘ + K or going to Hardware -&gt; Keyboard -&gt;Connect Hardware KeyboardWith this enabled, the software keyboard may not show by default. You can toggle this bypressing ⌘ + K or going to Hardware -&gt; Keyboard -&gt; Toggle Software KeyboardNow every time you click an input field, the software keyboard will display exactly how itwould if you were using a real device and you can type using your hardware keyboard. However one thing you may have noticed is that when you focus on the input field with a tap, thekeyboard pops up and covers it on Android and comes quite close on iOS: Since the virtual keyboard can cover roughly half the device screen, this is a common prob-lem that occurs when using text inputs in an application. Fortunately, React Native includesKeyboardAvoidingView , a component that solves this problem by allowing us to adjust where othercomponents render in relation to the virtual keyboard. Let’s import and use this component insteadof View : 12345678910111213141516render() &#123;return (&lt;KeyboardAvoidingView style=&#123;styles.container&#125; behavior=&quot;padding&quot;&gt;&lt;Text style=&#123;[styles.largeText, styles.textStyle]&#125;&gt;San Francisco&lt;/Text&gt;&lt;Text style=&#123;[styles.smallText, styles.textStyle]&#125;&gt;Light Cloud&lt;/Text&gt;&lt;Text style=&#123;[styles.largeText, styles.textStyle]&#125;&gt;24°&lt;/Text&gt;&lt;TextInputautoCorrect=&#123;false&#125;placeholder=&quot;Search any city&quot;placeholderTextColor=&quot;white&quot;style=&#123;styles.textInput&#125;clearButtonMode=&quot;always&quot;/&gt;&lt;/KeyboardAvoidingView&gt;);&#125; Notice that KeyboardAvoidingView accepts a behavior prop with which we can customize how thekeyboard adjusts. It can change its height, position or bottom padding in relation to the position ofthe virtual keyboard. Here, we’ve specified padding .Now tapping the text input will shift our component text and input fields out of the way of thesoftware keyboard. Custom componentsSo far, we’ve explored how to add styling into our application, and we’ve included some built-incomponents into our main App component. We use View as our component container and importText and TextInput components in order to display hardcoded weather data as well as an inputfield for the user to change locations.It’s important to re-iterate that React Native is component-driven. We’re already representing ourapplication in terms of components that describe different parts of our UI without too much effort,and this is because React Native provides a number of different built-in components that you canuse immediately to shape and structure your application.However, as our application begins to grow, it’s important to begin thinking of how it can furtherbe broken down into smaller and simpler chunks. We can do this by creating custom componentsthat contain a small subset of our UI that we feel fits better into a separate, distinct componentfile. This is useful in order to allow us to further split parts of our application into something moremanageable, reusable and testable.Although our application in its current state isn’t extremely large or unmanageable, there’s still someroom for improvement. The first way we can refactor our component is to move our TextInput intoa separate component to hide its implementation details from the main App component. Let’s createa components directory in the root of the application with the following file:├── components/ SearchInput.jsAll the custom components we create that we use in our main App component will live inside thisdirectory. For more advanced apps, we might create directories within components to categorizethem more specifically. Since this app is pretty simple, let’s use a flat components directory.The SearchInput will be our first custom component so let’s move all of our code for TextInputfrom App.js to SearchInput.js : 12345678910111213141516171819202122232425262728293031323334import React from &apos;react&apos;;import &#123; StyleSheet, TextInput, View &#125; from &apos;react-native&apos;;export default class SearchInput extends React.Component &#123;render() &#123;return (&lt;View style=&#123;styles.container&#125;&gt;&lt;TextInputautoCorrect=&#123;false&#125;placeholder=&#123;this.props.placeholder&#125;placeholderTextColor=&quot;white&quot;underlineColorAndroid=&quot;transparent&quot;style=&#123;styles.textInput&#125;clearButtonMode=&quot;always&quot;/&gt;&lt;/View&gt;);&#125;&#125;const styles = StyleSheet.create(&#123;container: &#123;height: 40,marginTop: 20,backgroundColor: &apos;#666&apos;,marginHorizontal: 40,paddingHorizontal: 10,borderRadius: 5,&#125;,textInput: &#123;flex: 1,color: &apos;white&apos;,&#125;,&#125;); Let’s break down what this file contains:• We export a component named SearchInput .• This component accepts a placeholder prop.• This component returns a React Native TextInput with a few of its properties specifiedwrapped within a View . We’ve applied the appropriate styles to our view container includinga borderRadius . We also added underlineColorAndroid=”transparent” to remove the darkunderline that shows by default on Android. this is a special keyword in JavaScript. The details about this are a bit nuanced, but for thepurposes of the majority of this book, this will be bound to the React Native componentclass. So, when we write this.props inside the component, we’re accessing the propsproperty on the component. When we diverge from this rule in later sections, we’ll point itout.For more details on this, check out this page on MDN 35 .","categories":[],"tags":[]},{"title":"装甲车机器人","slug":"瓦力工厂/装甲车机器人","date":"2018-12-18T13:10:43.301Z","updated":"2018-11-04T08:40:23.000Z","comments":true,"path":"2018/12/18/瓦力工厂/装甲车机器人/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/装甲车机器人/","excerpt":"","text":"情景任务:瓦力工程师接到一个新任务，就是为“国防部”设计装甲车。来满足国防和维稳中用装甲车反坦克、扫雷、通讯和反恐的需要。现在要求制作发射导弹的装甲车，导弹发射时的角度可以自由调整。 任务分解：１．需要外界能量提供动力２．需要有轮子（为什么呢？观察生活）３．需要有前进、加速、减速、停止、转弯、后退的控制方法４．需要有装甲车的形状、特点。5.调整发射角度，利用马达导杆，控制发射角度。 知识点拓展：装甲车是具有装甲防护的各种履带或轮式军用车辆，是装有装甲的军用或警用车辆的统称。坦克也是装甲车履带式装甲车辆的一种，但是在习惯上通常因作战用途另外独立分类，而装甲车辆多半是指防护力与火力较坦克弱的车种。装甲车的特性为具有高度的越野机动性能，有一定的防护和火力作用，分为履带式和轮式两种，一般装备一至两门中小口径火炮及数挺机枪，一些还装有反坦克导弹，结构以装甲车体、武器系统、动力装置等组成。 器材分解：电池盒、轮子、CPU、触碰开光、LED灯、蜂鸣器，伺服马达，导杆系统 学习目标：1.三个马达的控制方法2.了解装甲车的基础知识。3.了解导杆系统在控制系统角度方面的应用。 构建步骤： 装甲车机器人程序设计：装甲车机器人，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"接力赛机器人","slug":"瓦力工厂/接力赛机器人","date":"2018-12-18T13:10:43.265Z","updated":"2018-11-10T02:31:27.000Z","comments":true,"path":"2018/12/18/瓦力工厂/接力赛机器人/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/接力赛机器人/","excerpt":"","text":"情景任务:瓦力工程师接到一个新任务，新年快要到了，瓦力工厂要求瓦li工程师为新年增加气氛。组织一场新年接力赛。要求我们瓦力工程师为接力在设计机器人。 任务分解：１．需要外界能量提供动力２．需要有轮子（为什么呢？观察生活）３．需要有前进、停止、的控制方法（不能手动） 知识点拓展：接力跑，是田径运动中唯一的集体项目。以队为单位，每队4人，每人跑相同距离。其起源有多种说法，有的认为起源于古代奥运会祭祀仪式中的火炬传递，有的认为与非洲盛行的”搬运木料”或”搬运水坛”游戏有关，也有的认为是从传递信件文书的邮驿演变而来。接力跑引入体育比赛，不只是田径项目，在不少其他体育活动中也有类似的比赛。就田径而言，其起源是诸说不，主要有两种说法：一种说法是由非洲黑人接力运送木材演变而来的。非洲人在茂密的森林中砍伐木料后，道路崎岖，运送困难，于是采用了接力的方法。搬运过程中，彼此进行速度比赛，看谁搬的快，运的多。另一种说法是在十七世纪时，葡萄牙一艘军舰外出，水兵上岸游玩，发现当地居民聚在一起进行一种有趣的游戏。参加者分成若干组，每组4人，每组有一人拿着空坛，比赛开始后，持空坛的人迅速跑向50米外的水坛，将水倒人空坛，然后拿着空坛跑回交给本组第二人。如此循环往复，直到全组跑完，最先跑完者获胜。葡萄牙水兵将这种游戏带入欧洲，并加以改变，以木棒代替空坛，很快就成为学校中的一项活动，以后又演变成田径运动中的接力赛。 器材分解：电池盒、轮子、CPU、触碰开光、附件 学习目标：课程目标：1.了解接力赛的起源2.根据接力任务自主搭建机器人3．综合使用学习的编程模块自主编程 构建步骤： 接力赛机器人程序设计：接力赛机器人已完成，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"批量缩小图片","slug":"瓦力工厂/批量缩小图片","date":"2018-12-18T13:10:43.265Z","updated":"2018-11-19T11:17:46.000Z","comments":true,"path":"2018/12/18/瓦力工厂/批量缩小图片/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/批量缩小图片/","excerpt":"","text":"驱动需求:最近做了一段时间教程，发现做的网站打开非常慢，打开单张图片的属性一看，竟然每张都1-2M，网站打开不满才有问题呢？于是在网上找批量压缩图片的软件。 功夫不负有心人，终于找到了 imagemagick 先来看看 ImageMagick 能做些什么：1、批量旋转、分割，并顺序编号2、自动批量切除白边（auto-crop）3、自动倾斜校正（deskew）4、批量加标注5、批量去标注6、批量加水印7、批量去水印一、最基本的格式转换下面，我将结合与扫书制书有关的图像操作，来说明 IM 的用法。 前面已经说过，IM 由一组命令行工具组成，具体来说也就是 convert、mogrify、composite、montage、identify、compare、display、animate、stream、import 和 conjure，这 11 个命令。 其中最常用的，是 convert 和 mogrify。 1、将 a.gif 转为 png 格式 convert a.gif a.png请注意，convert 命令的基本格式为 convert 源文件 [参数] 目标文件在上面的命令中，源文件是 a.gif，目标文件是 a.png。由于这是最简单的格式转换，所以不需要中间的参数。convert 常用于单个文件的转换。上面的命令是它最基本的用法。 前面说过 IM 支持超过 100 种的文件格式。下面的命令，可以列出 IM 所支持的所有格式： identify -list format 2、批量文件的格式转换 mogrify -path newdir -format png *.gif 这个命令的作用，是将当前目录下的所有 gif 文件，转换为 png 格式，并将其存放在 newdir 目录下。 mogrify 是用于批量处理文件的命令。它的基本格式是这样的： mogrify 参数 源文件mogrify 支持基本的通配符，例如你可以用 a*.png 指代所有以 a 打头的 png 文件，诸如此类。 再回到刚才的命令： mogrify -path newdir -format png *.gif 这里的 -path 和 -format 是两个可选择的参数。-format 指定输出的文件格式，而 -path 则指定输出的文件目录。 我在这里先强调一下：如果不加 -path 参数的话，mogrify 有可能会覆盖你的源文件，因此强烈推荐在每个 mogrify 命令里都加上 -path 参数，并在执行之前，先检查整个命令正确性。 二、图像的缩放：使用 -resizeIM 有好几种缩放图像的方法，在这里我只讲最基本的 resize 命令。 将一个200x304大小的图像缩小为100x152（长宽各缩短一半）。 convert page200.png -resize 100x152 page100.png 上面的 100x152，指定了目标文件的长和宽。 你也可以只指定目标文件宽度，这样它的高度会等比例放大： convert page200.png -resize 100 page100.png 或者只指定高度： convert page200.png -resize x152 page100.png 以上三句命令，其结果都是一样的。 你可以用 identify 命令来显示图像的尺寸以及其它一些信息： identify page100.png其结果为： page100.png PNG 100x152 100x152+0+0 8-bit DirectClass 17.9kb 最后，你还可以通过指定百分比来缩放图像： convert page200.png -resize 50% page100.png convert page200.png -resize 150% page300.png 批量缩放图像 mogrify -path newdir -resize 200% *.png 这句命令的意思是将当前目录中所有的 png 文件都放大一倍，并存放到 newdir 目录中。 改进 就这样一行命令就实现了图片的压缩，试了一下，大概压缩到200K左右，清晰度还能满足要求。 但是，这样的命令行只能进行当前文件夹的图片压缩。和linux -R 递归参数并不匹配。 最后用 Bash程序解决 1234567 #!/bin/bashecho &quot;resize image who is bigger than 200k&quot;;for i in `find . -size +200k`;doconvert $i -resize 40% $i;echo &quot;resize image $i to 40%&quot;;done 只能说，编程让生活如此简单！ 有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"滑板车机器人","slug":"瓦力工厂/滑板车机器人","date":"2018-12-18T13:10:43.265Z","updated":"2018-11-03T02:17:46.000Z","comments":true,"path":"2018/12/18/瓦力工厂/滑板车机器人/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/滑板车机器人/","excerpt":"","text":"情景任务:瓦力工程师接到一个新任务，就是为“最后一公里”设计机器人。“最后一公里”指的是人们在上下学或上下班的途中，乘坐公共交通工具到达公交站，地铁站后，还需要走最后一公里才能达到目的地。作为瓦力工程师的我们怎么设计滑板车机器人，来帮助人们更方便的完成最后一公里呢？ 任务分解：１．需要外界能量提供动力２．需要有轮子（为什么呢？观察生活）３．需要有前进、加速、减速、停止、转弯、后退？的控制方法４．需要有声光指示、装饰 知识点拓展：平衡车原理：当我们在驾驶平衡车的时候，平衡车的两个轮子就代替了双脚。与身体的平衡系统非常类似，当我们的重心前倾时，智能系统就会自动感应到，并精确地驱动轮子向前运动，以保持平衡;同样地，当我们身体的重心后倾时，轮子就会向后运动。这套工作原理被称为“动态平衡”原理，这也是平衡车被叫做“平衡车”的原因，采用第二代运动补偿算法，利用其内部的陀螺仪和加速度传感器，来精确检测车体姿态的微小变化，并利用精密的伺服控制系统，灵敏地驱动电机，进行相应的调整，以保持整个车体的稳定和平衡。 器材分解：电池盒、轮子、CPU、触碰开光、LED灯、蜂鸣器 学习目标：1.复习触碰开关的工作原理。2.了解人们的代步工具。3.熟练运用循环模块（While）进行输入、输出控制。 构建步骤： 程序设计：","categories":[],"tags":[]},{"title":"每日点滴","slug":"瓦力工厂/每日点滴","date":"2018-12-18T13:10:43.265Z","updated":"2018-11-10T01:58:00.000Z","comments":true,"path":"2018/12/18/瓦力工厂/每日点滴/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/每日点滴/","excerpt":"","text":"在Markdown中插入代码块[title] [] [url] [link text]1code snippet 例子1alert(&apos;Hello World!&apos;); 另一种常用三个反引号 例子12#/bin/python3print&#123;&quot;helloworld&quot;&#125; 在markdown 插入公式Hexo 输入数学公式主要通过MathJax 渲染LaTeX 公式实现的，具体开启步骤以及简要语法介绍如下。 安装配置在next 主题配置文件_config.yaml 中找到 MathJax 选项，将enable 改成 true 即可：12345MathJax Supportmathjax: enable: true per_page: false cdn: //cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML 页面插入页面插入公式有两种形式，一是行内插入公式不居中显示：1$公式$ 例如$E=mc^2$$ 第二种是行间插入公式，居中显示：例如$$S=\\pi*r^2$$ 语法公式[公式]https://www.jianshu.com/p/e4d4433d418a%}1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495语法公式关于公式的语法格式，主要有以下常用：上下标^ 表示上标，_ 表示下标。$$a_&#123;1&#125; x^&#123;2&#125; $$$$e^&#123;-\\alpha t&#125; $$$$a^&#123;i&#125;_&#123;ij&#125;$$$$e^&#123;x^2&#125; \\neq &#123;e^x&#125;^2$$$$a_&#123;1&#125;$$$$x^&#123;2&#125;$$$$e^&#123;-\\alpha t&#125;$$$$a^&#123;i&#125;_&#123;ij&#125;$$$$e&#123;x2&#125; \\neq &#123;ex&#125;2$$此外，如果左右两边都有上下标，则使用 \\sideset 命令，效果如下：\\sideset&#123;^xy&#125;&#123;^xy&#125;\\bigotimes$$\\sideset&#123;xy&#125;&#123;xy&#125;\\bigotimes$$平方根平方根输入命令为 \\sqrt，n次方根命令为 \\sqrt[n]，其符号大小由LaTeX 自动给定：$$\\sqrt&#123;x&#125;$$ $$\\sqrt&#123;x^2+\\sqrt&#123;y&#125;$$ $$\\sqrt[3]&#123;2&#125;$$$$\\sqrt&#123;x&#125;$$$$ \\sqrt&#123;x^2+\\sqrt&#123;y&#125;&#125;$$$$\\sqrt[3]&#123;2&#125;$$水平线使用 \\overline 和 \\underline 分别在表达式上下方画出水平线：$$\\overline&#123;m + n&#125;$$$$\\underline&#123;m + n&#125;$$$$\\overline&#123;m + n&#125;$$$$\\underline&#123;m + n&#125;$$水平大括号命令 \\overbrace 和 \\underrace，效果如下：$$\\underbrace&#123;a+b+\\cdots+z&#125;$$$$\\overbrace&#123;a+b+\\cdots+z&#125;$$$$\\overbrace&#123;a+b+\\cdots+z&#125;$$$$\\underbrace&#123;a+b+\\cdots+z&#125;$$矢量矢量的命令是 \\vec，用于单个字母的向量表示。\\overrightarrow 和\\overleftarrow 分别表示向右和向左的向量箭头：$$\\vec&#123;a&#125;$$$$\\overrightarrow&#123;AB&#125;$$$$\\overleftarrow&#123;BA&#125;$$$$\\vec&#123;a&#125;$$$$\\overrightarrow&#123;AB&#125;$$$$\\overleftarrow&#123;BA&#125;$$分数分数使用 \\frac&#123;...&#125;&#123;...&#125; 进行排版：$$1\\frac&#123;1&#125;&#123;2&#125;$$$$\\frac&#123;x^2&#125;&#123;k+1&#125;$$$$x^&#123;1/2&#125;$$$$1\\frac&#123;1&#125;&#123;2&#125;$$$$\\frac&#123;x^2&#125;&#123;k+1&#125;$$$$x^&#123;1/2&#125;$$积分运算符积分运算符使用 \\int 生成。求和运算符使用 \\sum 生成。乘积运算符使用 \\prod 生成。上下限使用^ 和_ 命令，类似 上下标：$$\\sum_&#123;i=1&#125;^&#123;n&#125;$$$$\\int_&#123;0&#125;^&#123;\\frac&#123;\\pi&#125;&#123;2&#125;&#125;$$$$\\prod_\\epsilon$$$$\\sum_&#123;i=1&#125;^&#123;n&#125;$$$$\\int_&#123;0&#125;^&#123;\\frac&#123;\\pi&#125;&#123;2&#125;&#125;$$$$\\prod_\\epsilon$$希腊字母$\\alpha$ \\alpha $\\beta$ \\beta $\\gamma$ \\gamma $\\delta$ \\delta $\\epsilon$ \\epsilon字体转换要对公式的某一部分字符进行字体转换，可以用&#123;\\rm需转换的部分字符&#125;命令，其中\\rm可以参照下表选择合适的字体。一般情况下，公式默认为意大利体。\\rm 罗马体 \\rm test \\it 意大利体 \\it test\\bf 黑体 \\bf test \\cal 花体 \\cal test\\sl 倾斜体 \\sl test \\sf 等线体 \\sf test\\mit 数学斜体 \\mit test \\tt 打字机字体 \\tt test\\sc 小体大写字母 \\sc test","categories":[],"tags":[]},{"title":"DPJ-046-鳐鱼机器人","slug":"瓦力工厂/DPJ-046-鳐鱼机器人","date":"2018-12-18T13:10:43.265Z","updated":"2018-11-18T03:53:06.000Z","comments":true,"path":"2018/12/18/瓦力工厂/DPJ-046-鳐鱼机器人/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/DPJ-046-鳐鱼机器人/","excerpt":"","text":"情景任务:武器装备部要求瓦力工厂制造一种仿生鱼，用于侦测水下敌方的潜艇，瓦力工厂把这个光荣的任务交给我们瓦力工程师，为了保家卫国，维护世界的和平，我们瓦力工程师流点汗，加点班也没什么。技术在手，什么都有，NO Problem！ 知识点拓展：鱼身体呈流线型中间大两头小，身体表面覆盖鳞片，保护身体；鳞片表面有一层粘液，游泳时减小水的阻力；身体两侧有一行侧线，侧线和神经相连，主要是测定方向和感知水流的作用；鱼的身体长有胸鳍、背鳍、腹鳍和尾鳍是鱼在水中的运动器官；体内有鳔，主要作用是调节身体的比重，鳔在鳍的协同下，可以使鱼停留在不同的水层里。鱼鳍的作用：背鳍和臀鳍主要在行动时起稳定作用和平衡作用。尾鳍和体侧肌肉配合，起推动鱼体和掌握方向的作用。胸鳍和腹鳍的主要作用是保持鱼体平衡，配合鱼体转向，调整鱼体升降。但胸鳍比腹鳍用途更广，可以像船桨一样，一下一下地划动，使鱼体徐徐前进。 鳐鱼，属于软骨鱼纲鳐形目 Rajiformes和鲼形鱼目，是多种扁体软骨鱼的统称。分布于全世界大部分水区，从包括2亚目，共8科约49属315种。中国产6科8属28种。我国各地俗称不一，舟山渔民称黄貂鳐叫黄虎，称蝠鲼叫燕子花鱼、黑虎、双头花鱼，称何氏鳐叫猫猫花鱼，而胶东渔民则叫劳子鱼、老板鱼。鳐鱼体型大小各异，小鳐成体仅50厘米，大鳐可长达8米。鳐鱼无害，底栖，常常部分埋于水底沙中。 任务分解：１．需要外界能量提供动力２．需要有伺服马达控制鱼尾游动。３．需要控制伺服马达的指令。 器材分解：电池盒、马达、伺服马达、CPU、触碰开关、附件 学习目标：1.伺服马达的认识与应用.2.伺服马达的多功能用途.3.遥控器控制双马达分开编程。 构建步骤： 接力赛机器人程序设计：道闸机器人已完成，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"DPJ-021感应机器人","slug":"瓦力工厂/DPJ-021感应机器人","date":"2018-12-18T13:10:43.265Z","updated":"2018-11-17T08:51:03.000Z","comments":true,"path":"2018/12/18/瓦力工厂/DPJ-021感应机器人/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/DPJ-021感应机器人/","excerpt":"","text":"情景任务:小瓦力来到一处神秘的宫殿，瓦力打开宫殿大门，刚走出一步，突然感到脚下的石头像一个开关一样咯地响了一声，然后抬头一看，一块石头从正上方掉了下来，看来有机关，危险。迅速后退。不能灵活躲避落石的机器人永远无法通过最后的机关，瓦力心里想到。怎么办呢？有了，用螳螂机器人带我过去。 知识点拓展：螳螂是昆虫中体型偏大的，体长一般55到105毫米，非洲的螳螂是世界最螳螂。大的，身体流线型，以绿色，褐色为主，也具有花斑的种类；标志性特征是有两把“大刀”，即前肢，上有一排坚硬的锯齿，大刀钩末端长有攀爬的吸盘。头部呈扇形，较小；复眼突出，大而透亮，以黄绿色为主，晚上在灯光下呈现黑色，单眼，在两眼之间有3个小点即单眼；触角细长；颈部可180度转动；咀嚼式口器，上颚强劲。前足腿节和胫节有利刺，胫节镰刀状，常向腿节折叠，形成可以捕捉猎物的前足；前翅轻柔，遮住身体全部为覆翅，后翅比前翅要薄，边缘透明色，中间成放射状的紫红色、伸展开呈现扇状，休息时收敛和前翅相合；腹部肥大。前足锋利发达善于捕捉，中、后足适于步行，但有时前足也会用来保持平衡，发育呈变态发育。 红外避障传感器基本原理：利用物体的反射性质。在一定范围内，如果没有障碍物，发射出去的红外线，因为传播距离越远而逐渐减弱，最后消失。如果有障碍物，红外线遇到障碍物，被反射到达传感器接收头。传感器检测到这一信号，就可以确认正前方有障碍物，并送给单片机，单片机进行一系列的处理分析，协调小车两轮工作，完成一个漂亮的躲避障碍物动作。 任务分解：１．需要外界能量提供动力２．需要有轮子（为什么呢？观察生活）３．需要有前进、后退、转弯的控制方法（不能手动） 器材分解：电池盒、马达、轮子、CPU、红外避障传感器、附件 学习目标：课程目标：1.自然界的光线2.红外传感器的原理3．如果那么模块的使用 构建步骤： 接力赛机器人程序设计：感应机器人已完成，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"日积月累","slug":"瓦力工厂/日积月累","date":"2018-12-18T13:10:43.265Z","updated":"2018-11-10T03:43:30.000Z","comments":true,"path":"2018/12/18/瓦力工厂/日积月累/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/日积月累/","excerpt":"","text":"瓦力币的含义红色：比赛绿色：团队蓝色：动手黄色：语言紫色：全勤 遥控板连接6按键遥控接收板印有红框内标记的 ”瓦力工厂“ 字样！接收板连接到接收板的 “RXD” 引脚位置","categories":[],"tags":[]},{"title":"DPJ-016-道闸机器人","slug":"瓦力工厂/DPJ-016-道闸机器人","date":"2018-12-18T13:10:43.265Z","updated":"2018-11-17T10:37:33.000Z","comments":true,"path":"2018/12/18/瓦力工厂/DPJ-016-道闸机器人/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/DPJ-016-道闸机器人/","excerpt":"","text":"情景任务:小瓦力工程师爸爸的单位要改造进出的大门，要求有自动道闸系统，这项任务单位交给了小瓦力工程师的爸爸，可把爸爸急坏了。小瓦力工程师听说后，自告奋勇的对爸爸说，这事交给我，对于这样的问题，我们瓦力工程师只能说NO Problem！ 知识点拓展：道闸控制板根据操作指令控制电机进行正向反转;电机带动减速机输入轴转动;减速机在减速输出轴并带动摇臂在后半周180º的上下转动;减速机摇臂通过下关节轴承、连杆、上关节轴承带动主轴驱动臂在后半周90º范围内作上下运动;主轴驱动臂驱动与主轴连接的闸杆在水平与垂直的90º范围内作升降运动。 ETC是不停车电子收费系统，ETC专用车道是给那些装了ETC车载器的车辆使用的，采用电子收费方式．ETC( Electronic Toll Collection ) 不停车收费系统是目前世界上最先进的路桥收费方式。通过安装在车辆挡风玻璃上的车载电子标签与在收费站 ETC 车道上的微波天线之间的微波专用短程通讯，利用计算机联网技术与银行进行后台结算处理，从而达到车辆通过路桥收费站不需停车而能交纳路桥费的目的 任务分解：１．需要外界能量提供动力２．需要有抬起杆子的开关。３．需要有需要有抬起杆子的指令。 器材分解：电池盒、马达、CPU、触碰开关、附件 学习目标：1.了解道闸结构.2.了解不停车电子收费系统.3.自己设计并切完成道闸机器人的制作。 构建步骤： 接力赛机器人程序设计：道闸机器人已完成，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"线控机器人","slug":"瓦力工厂/线控机器人","date":"2018-12-18T13:10:43.265Z","updated":"2018-11-10T10:32:34.000Z","comments":true,"path":"2018/12/18/瓦力工厂/线控机器人/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/线控机器人/","excerpt":"","text":"情景任务:瓦力工程师接到一个新任务，新年快要到了，瓦力工厂要求瓦力工程师为新年增加气氛。为新年联欢会设计线控机器人。 知识点拓展：皮影戏，旧称“影子戏”或“灯影戏”，是一种用蜡烛或燃烧的酒精等光源照射兽皮或纸板做成的人物剪影以表演故事的民间戏剧。表演时，艺人们在白色幕布后面，一边操纵戏曲人物，一边用当地流行的曲调唱述故事（有时用方言），同时配以打击乐器和弦乐，有浓厚的乡土气息。在河南、山西、陕西、甘肃天水等地农村，这种拙朴的汉族民间艺术形式很受人们的欢迎。“皮影”是对皮影戏和皮影戏人物（包括场面道具景物）制品的通用称谓。皮影戏是让观众通过白色幕布，观看一种平面人偶表演的灯影来达到艺术效果的戏剧形式；而皮影戏中的平面人偶以及场面景物，通常是民间艺人用手工，刀雕彩绘而成的皮制品，故称之为皮影。在过去还没有电影、电视的年代，皮影戏曾是十分受欢迎的民间娱乐活动之一。 任务分解：１．需要外界能量提供动力２．需要有轮子（为什么呢？观察生活）３．需要有前进、停止、的控制方法（不能手动） 器材分解：电池盒、轮子、CPU、触碰开光、附件 学习目标：课程目标：1.了解输入和输出的概念2.分清输入设备和输出设备3.自己设计并且完成线控机器人的制作 构建步骤： 接力赛机器人程序设计：线控机器人已完成，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"Go语言实用函数点滴","slug":"瓦力工厂/Go语言实用函数点滴","date":"2018-12-18T13:10:43.265Z","updated":"2018-11-21T03:00:29.000Z","comments":true,"path":"2018/12/18/瓦力工厂/Go语言实用函数点滴/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/Go语言实用函数点滴/","excerpt":"","text":"创建文件、文件夹12345678910111213141516171819202122232425package mainimport ( &quot;fmt&quot; &quot;os&quot; &quot;path&quot; &quot;github.com/Unknwon/com&quot; )const ( wjunjie = &quot;/home/wjunjie/Study/读读写写/liebiao.txt&quot;)func mkdir() &#123; // 检查文件夹 if !com.IsExist(wjunjie) &#123; os.MkdirAll(path.Dir(wjunjie), os.ModePerm) os.Create(wjunjie) &#125;&#125;func main() &#123; fmt.Println(&quot;创建文件夹&quot;) mkdir()&#125;// 检查文件夹，若不存在，则新建","categories":[],"tags":[]},{"title":"DPJ-026-双寻线机器人","slug":"瓦力工厂/DPJ-026-双寻线机器人","date":"2018-12-18T13:10:43.265Z","updated":"2018-12-02T05:32:20.000Z","comments":true,"path":"2018/12/18/瓦力工厂/DPJ-026-双寻线机器人/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/DPJ-026-双寻线机器人/","excerpt":"","text":"情景任务:双11刚刚过去，瓦力工厂就接到一个任务，那就是为明年的双11设计自动送快递的小车，因为双11实在是太火爆了，快递员夜以继日的送快递都不能把快递送完，有的快递员都累病了。这个任务就交到了我们伟大的瓦力工程师手里，对于这样的问题，我们瓦力工程师只能说NO Problem！ 知识点拓展：红外避障传感器基本原理： 利用物体的反射性质。在一定范围内，如果没有障碍物，发射出去的红外线，因为传播距离越远而逐渐减弱，最后消失。如果有障碍物，红外线遇到障碍物，被反射到达传感器接收头。传感器检测到这一信号，就可以确认正前方有障碍物，并送给单片机，单片机进行一系列的处理分析，协调小车两轮工作，完成一个漂亮的躲避障碍物动作。 巡线机器人的实现原理 由于黑色具有较强的吸收能力，当循迹模块发射的红外线照射到黑线时，红外线将会被黑线吸收，导致循迹模块上光敏三极管处于关闭状态，此时模块上一个LED熄灭。在没有检测到黑线时，模块上两个LED常亮。 任务分解：１．需要外界能量提供动力２．需要有轮子（为什么呢？观察生活）３．需要有前进、转弯、停止的控制方法（不能手动） 器材分解：电池盒、马达、轮子、CPU、红外避障传感器、附件 学习目标：课程目标：1.了解双巡线。2.红外传感器搭建与调试。3.双红外线巡线编程逻辑。4.培养孩子发现问题，分析问题，解决问题，动手搭建能力。 构建步骤： 接力赛机器人程序设计：双巡线机器人已完成，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"趣味编程第2课-小猫跳舞","slug":"瓦力工厂/第2课小猫跳舞","date":"2018-12-18T13:10:43.213Z","updated":"2018-11-03T01:14:25.000Z","comments":true,"path":"2018/12/18/瓦力工厂/第2课小猫跳舞/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/第2课小猫跳舞/","excerpt":"","text":"当我们学习了第一课，小猫学步后，对Scratch有了初步的了解，本节课通过小猫跳舞程序的编制，给大家讲解Scratch中，角色的添加与删除，背景的添加与删除。不同角色拥有不同的脚本、背景、声音。下面介紹一下Scratch的各个功能区块。下面添加小猫跳舞的舞台，给小猫一个充分展示才艺的空间小猫有舞台了，下面给小猫添加才艺，把命令积木中的才艺赋给小猫，跳舞、唱歌、弹奏乐器，甚至变脸等等才艺！给小猫添加一个领跳，在美女小姐姐的指挥下，让小猫尽情的跳舞吧！当然，也要给美女小姐姐赋予各种各样的才艺。小猫跳舞就完成了，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"趣味编程第3课-小猫猜生肖","slug":"瓦力工厂/第3课小猫猜生肖","date":"2018-12-18T13:10:43.213Z","updated":"2018-11-03T01:14:19.000Z","comments":true,"path":"2018/12/18/瓦力工厂/第3课小猫猜生肖/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/第3课小猫猜生肖/","excerpt":"","text":"当我们学习了第二课小猫跳舞后，对角色的添加与删除，背景的添加与删除。有了初步的了解，下面我们演示小猫猜生肖案例，对控制、侦测、运算、事件模块进行介绍！这就是小猫猜生肖的基本界面设计，先添加一个背景，然后依次添加角色小猫、老鼠、小狗、猴子…首先,为生肖大师小猫设计脚本：1.用事件中积木开始整个程序。2.用控制中积木开始一个循环。3.用侦测中积木开始一个对话框。并把对话提示语改为“请问你的出生年份是多少？”下面详细的介绍一下小猫是如何知道小朋友的生肖的：大家都知道2018年是狗年，2018除以12的余数是2，那么可以推算出来，能被12整除的年份是猴年，余一的是鸡年、余二的是狗年、依次类推。为什么呢？三年级的小朋友都背过 子鼠、丑牛、寅虎、卯兔的生肖顺口溜吧。就根据咱们已经学到的知识。上图就是咱们经常用到的控制积木中的积木块，是咱们设计的程序的大脑。看这条语句判断你的输入符不符合实际情况。小朋友可能注意到了，否则 后面有两条语句，棕色的广播语句和紫色的说语句。广播语句是用于程序内部通信的，下面给大家展示一下小猴子角色的脚本。是不是和广播的消息遥相呼应。好啦，小猫猜生肖用到的全部知识就介绍完了，想要知道小猫猜生肖的全部脚本或者有不明白的地方，可以联系老师哟！","categories":[],"tags":[]},{"title":"趣味编程第1课-小猫学步","slug":"瓦力工厂/第1课小猫学步","date":"2018-12-18T13:10:43.209Z","updated":"2018-11-03T01:14:28.000Z","comments":true,"path":"2018/12/18/瓦力工厂/第1课小猫学步/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/第1课小猫学步/","excerpt":"","text":"当我们已经安装好了软件。此时是全英文的，我们可以点击这个小宇宙切换成简体中文。所以一定要小朋友要好好学英语，这样我们就可以不用切换啦！现在我们来介绍下Scratch软件每个区块的作用和名字，区块名字记不住没关系的，只要知道每个区块是做什么的就可以啦！菜单-是我们保存文件和打开文件的地方； 控制按钮-小绿旗是开始，红色圆圈是停止； 工具箱-可以放大和缩小我们的角色； 舞台区-就是我们动画和游戏展示的地方； 新建角色按钮-我们可以建立我们自己喜欢的角色； 角色列表区-我们可以看到我们有哪些角色； 程序区块-是我们最重要的地方了，我们需要后面慢慢学习； 脚本区-是我们的做的程序。 通过这些枯燥的解释以后，我们就要进入后面的有趣环节了。 一只不会走路的小猫，要小朋友动脑筋来让它学会走路。 我们一起来看看最终我们要做成的样子，一只小猫咪在我们的编程下学会了走路。 是不是太棒啦！！！首先我们添加动作，开始我们编程的第一步，『移动10步』。可是，要不断的点击移动1步，移动1步，小猫咪才会行走，感觉是被老师拖着走的，不是自己在走的，而且老师点击的也有点点累了。老师想让小猫咪自己走起了，不用老师每次去点击一次它才走一步，那么我们就要用一个很关键的程序部分了，那就是重复（循环）。就像我们学习一样要不断的重复才能记住。小猫能一次走很远了，但是好像小猫的动作很不自然，下面我们就让小猫走的自然一点好的这样我们的第一课『小猫学步』就完成了。现在小朋友可以在回到最开始看看我们的做的程序是不是和老师最开始的视频一样的效果。如果不是看看是不是哪里有什么小问题，还是你又改进什么和新发现。可以给老师留言哟！我们一起学习和进步。","categories":[],"tags":[]},{"title":"儿童编程Scratch 赢在起跑线","slug":"瓦力工厂/Scratch 简介","date":"2018-12-18T13:10:43.209Z","updated":"2018-11-03T01:14:02.000Z","comments":true,"path":"2018/12/18/瓦力工厂/Scratch 简介/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/Scratch 简介/","excerpt":"","text":"Scratch是一种全新的程序设计语言，你可以用它很容易地创造交互式故事情节、动画、游戏，然后还可以把你的作品分享给所有人。开发者表示，这种电脑编程语言的目的，是帮助年轻人发展学习技能，学习创造性思维，以及学习集体合作。MIT（麻省理工学院）媒体实验室的博士生凯伦.布雷南，是Scratch项目的负责人，他说，“我们的目的不是要创办电脑程序编写大军，而是帮助电脑使用者表达自己。” 与其让孩子玩游戏；不如让孩子做编程。 Scratch不是游戏，是一款可以制作游戏、动画的编程工具。一旦掌握了这个工具，孩子们就能自由自在地挥洒它们无限的创意，享受创造的乐趣。Scratch由麻省理工学院媒体实验室开发出来至今，全美有超过100万的孩子在学习Scratch。而在台湾，中小学生的信息化课就是以Scratch为主来上的，也有许多Scratch教学的网站。台湾教育部门每年都会举行程序设计比赛。台湾中小学的教育，通过Scratch，扩展了语文，数学，外语，音乐，体育，科学的教学深度。 科技使人类的生活发生巨大的变化。就当下的教育而言，孩子科技能力的重要性绝不亚于其他才艺和知识。 根据孩子上课的情况和效果，我们总结了Scratch三大好处。 1、学习Scratch可以培养逻辑思维能力。在大年龄段孩子学习Scratch编程时，会涉及许多数学知识，孩子需要结合学校内学到的数学知识，来解决编程问题。因此，在不断探索的过程中，孩子们的数学知识也会越累越丰富，创作能力也越来越强。 2、学习Scratch可以提高学习的主动性。在Scratch课堂上，我们鼓励孩子自己创作作品。在创作的过程中不仅习得了Science（科学），Technology（技术），Engineering（工程），Arts（艺术），Maths（数学）等多个领域的知识，而且也获得了成就感和满足感。定期校区举办Scratch分享会，让孩子们彼此体验他们自己编程的游戏，互相提出改进方法方式，这个过程大大激励了孩子的成就感和学习欲望。 3、学习Scratch可以激发创造力。Scratch软件的优势是易学且功能强大，有助于孩子们发挥自己的想象力，而在动手创作过程中，他们的学习积极性、想象力和创造力会得到极大的锻炼。孩子们可以用Scratch中已有的素材，发挥自己的想象力制作游戏、动画，还可以自己设计素材。孩子只要敢想，在我们的指导下，就能完成他们心目中的游戏。 儿童编程和程序员的编程有什么区别？ 归于一句话“孩子编程看兴趣，大人编程看薪水。” 儿童编程使用简易的编程软件进行编程思想和思维方式的锻炼，核心的理念是在把计算机编程融合孩子兴趣的同时，加强孩子思维能力的锻炼，在中国的大多数的儿童编程学习中，均将学科知识与编程知识相融合的方式进行授课教学。这在中国是有一定原因的：传统的中国式教育是以升学为目的的，只有将学科知识融入到编程学习中，家长才会乐于让孩子去接触。而成人的程序编程主要学的是程序语法的应用和实践，他主要偏向的是计算机编程的项目开发。 相对于在学校信息课上所学的知识来说，用于初学者教学，Scratch有以下这些优点： 1、入门简单，无关原有编程基础，适合中小学学生初次学习编程语言时使用； 2、内容丰富，针对有兴趣、喜爱绘画的学生，提供角色绘制设计功能； 3、通过使用Scratch，让学生在动画、游戏设计过程中逐渐形成逻辑分析、独立思考创新的思维方式，学会提出问题，解决问题； 4、相比其他编程软件，Scratch更加直观，学生能比较容易地看到自己的劳动成果。 学习编程最基本的是编程概念的掌握，Scratch以积木的形式进行编程，8个编程部件涵盖了常见的编程概念。学习编程最重要的是编程思想的培养，在程序学习中培养学生利用编程解决问题的能力。 学生在学会了编程的基本原理和方法后，会有兴趣也有能力将动画和游戏编写得更逼真，更好玩。在修改动画游戏脚本的过程中，学生不断提出问题，解决问题，根据自己的需求进行分析，设定合适的角色和相应的脚本，最终实现程序。","categories":[],"tags":[]},{"title":"趣味编程第4课-制作贺卡","slug":"瓦力工厂/趣味编程第4课-制作贺卡","date":"2018-12-18T13:10:43.205Z","updated":"2018-11-03T01:14:08.000Z","comments":true,"path":"2018/12/18/瓦力工厂/趣味编程第4课-制作贺卡/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/趣味编程第4课-制作贺卡/","excerpt":"","text":"新年到了,用Scratch制作一张贺卡,来表达自己的喜悦心情吧!贺卡角色比较多,截图一个角色的程序角色列表","categories":[],"tags":[]},{"title":"趣味编程第3课-新年到!下雪了","slug":"瓦力工厂/第3课-新年到!下雪了","date":"2018-12-18T13:10:43.205Z","updated":"2018-11-03T01:14:22.000Z","comments":true,"path":"2018/12/18/瓦力工厂/第3课-新年到!下雪了/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/第3课-新年到!下雪了/","excerpt":"","text":"一、任务描述冬天来了,只见雪花纷纷扬扬地从空中飘下来。雪花落在小树上，小树好像穿上雪白的新衣。雪花落在屋顶上，屋顶好像戴上了雪白的帽子。雪花落在大地上，大地好像盖上了雪白的羊毛毯。要求用动画实现下雪的场景。 二、任务目的 1、让大家能够结合我们身边的事物来进行创作，巩固学习编程知识。 2、scratch中克隆体个数是有限的，不能无限制的克隆 3、学习私有变量的创建以及结合克隆体的使用。 4、面对某些不好实现的效果我们需要通过转换思维的办法来解决问题。 三、任务分析 1、初级挑战：只需要会使用克隆与随机数即可。在scratch中“克隆”与“当作为克隆体启动时”经常是配合使用，我们通过重复执行，来不断的克隆雪花。在每个克隆体启动时我们设置一下克隆体的大小和位置，然后再通过重复执行，改变克隆体的y坐标就实现了雪花下落效果。2、中级挑战：要求雪花能够落在屋顶、车、路面。这里只要在雪花下落的过程中增加一个侦测的判断条件，只要克隆体碰到车或房子或者路面（路面用颜色来判断），就停止克隆体移动。 在scratch中克隆体的个数是有限的，你慢慢会发现，雪花会变得越来越少，为了不让雪停下来，我们使用“图章”把克隆的雪花留在舞台上，然后删除克隆体，这样就不会因为克隆体达到上限而停止了。","categories":[],"tags":[]},{"title":"趣味编程第7课-因数与完美数","slug":"瓦力工厂/第7课-因数与完美数","date":"2018-12-18T13:10:43.197Z","updated":"2018-02-02T01:40:10.000Z","comments":true,"path":"2018/12/18/瓦力工厂/第7课-因数与完美数/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/第7课-因数与完美数/","excerpt":"","text":"1&lt;iframe allowtransparency=\"true\" width=\"485\" height=\"402\" src=\"//scratch.mit.edu/projects/embed/196941143/?autostart=false\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;","categories":[],"tags":[]},{"title":"趣味编程第6课-蜘蛛织网","slug":"瓦力工厂/第6课-蜘蛛织网","date":"2018-12-18T13:10:43.193Z","updated":"2018-11-03T01:14:11.000Z","comments":true,"path":"2018/12/18/瓦力工厂/第6课-蜘蛛织网/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/第6课-蜘蛛织网/","excerpt":"","text":"通过第五课的学习，大家通过一款微信上流行的小程序对 侦测 数据 运算 声音 等积木模块，有了初步的了解，小朋友们是不是更加喜欢编程了呢？下面是蟑螂画彩圆的效果图。下面这幅图，蜘蛛织网，图形很复杂，但是只是非常简单的积木模块。直接上积木模块图，用Scratch画笔功能，可以画各种复杂的图形哟。小朋友，你会做吧，记得加老师微信并与老师互动讨论哟，你还想加入什么你的功能呢？和老师一起进步吧！","categories":[],"tags":[]},{"title":"趣味编程第5课-成语猜猜看","slug":"瓦力工厂/第5课-成语猜猜看","date":"2018-12-18T13:10:43.109Z","updated":"2018-11-03T01:14:14.000Z","comments":true,"path":"2018/12/18/瓦力工厂/第5课-成语猜猜看/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/第5课-成语猜猜看/","excerpt":"","text":"通过第四课的学习，相信小朋友们对 运动、外观 、事件 、侦测 等积木模块有了更深一步的了解。下面通过一款微信上流行的小程序继续向大家介绍 侦测 数据 运算 声音 等积木模块。成语是我国汉字语言词汇中一部分定型的词组和短语。成语有固定的结构形式和固定的说法。表示一定的意义在语句中是作为一个整体来应用的。成语有很大一部分是从古代。形成沿用下来的再用词语方面往往不同与现代汉语。它代表了一个故事和典故。成语又是一种现成的话，跟习用语言语向近也略有区别。主要程序代码如图所示，巧妙地利用角色的造型进行程序图片之间的切换，用链表把成语的图片与意义相关联。答对的话有音乐提示与金币奖励。切换到下一个成语，并且所过的关卡加一。用变量 关名 存储并显示所过的关数，用变量 金钱 来存储并显示所获得的金币数。小朋友，你会做吧，记得加老师微信并与老师互动讨论哟，你还想加入什么你的功能呢？和老师一起进步吧！","categories":[],"tags":[]},{"title":"趣味编程第4课-蹦床运动","slug":"瓦力工厂/第4课-蹦床运动","date":"2018-12-18T13:10:43.109Z","updated":"2018-11-03T01:14:17.000Z","comments":true,"path":"2018/12/18/瓦力工厂/第4课-蹦床运动/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/第4课-蹦床运动/","excerpt":"","text":"当我们学习了第三课小猫猜生肖，对对控制、侦测、运算、事件模块有了初步的了解，今天通过蹦床运动介绍 运动 模块的 滑行 、面向 、左右转 和 外观 模块 的 下一个造型、鱼眼特效 等等…今天的程序非常简单，当绿旗被点击时，重复执行并通过 空格键 和 左移键 和 右移键 进行程序的交互，变换出不同的蹦极效果。蹦床的代码为蹦床用到了一个鱼眼特效，变幻出来了动态的效果！想要知道蹦床运动的全部脚本或者有不明白的地方，可以联系老师哟！","categories":[],"tags":[]},{"title":"赛艇","slug":"瓦力工厂/XKL-042-赛艇","date":"2018-12-18T13:10:43.105Z","updated":"2018-12-06T08:54:35.000Z","comments":true,"path":"2018/12/18/瓦力工厂/XKL-042-赛艇/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/XKL-042-赛艇/","excerpt":"","text":"学习目标：1.了解赛艇比赛常识 2.熟练运用凸轮结构 3.熟练运用涡轮箱 知识点拓展：赛艇是奥运会传统比赛项目之一。赛艇是由一名或多名桨手坐在舟艇上，背向舟艇前进的方向，运用其肌肉力量，通过桨和桨架简单杠杆作用进行划水，使舟艇前进的一项水上运动。舟艇上可以有舵手，也可以无舵手。赛艇运动多在江河湖泊等大自然水域中进行，空气清新，阳光充足，受到大自然的沐浴，能有效地提高人体的心血管和呼吸系统功能，增强全身肌肉力量，调节神经系统平衡，有利于提高人体的健康水平。赛艇运动员的肺活量在各项体育项目中占第一位，可达7000毫升，有人把赛艇运动称为肺部体操。 蜗杆传动常用于两轴交错、传动比较大、传递功率不太大或间歇工作的场合。1.用于改变传动方向2.用作减速机构。 构建步骤： 赛艇程序设计： 赛艇完成了，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"高尔夫","slug":"瓦力工厂/XKL-043-高尔夫","date":"2018-12-18T13:10:43.105Z","updated":"2018-12-14T07:45:29.000Z","comments":true,"path":"2018/12/18/瓦力工厂/XKL-043-高尔夫/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/XKL-043-高尔夫/","excerpt":"","text":"学习目标：1.了解高尔夫玩法 2.了解力的传递 3.了解物体碰撞规律 知识点拓展：高尔夫”是GOLF的音译，由四个英文词汇的首字母缩写构成。它们分别是：Green, Oxygen, Light, Friendship。意思是”绿色，氧气，阳光，友谊”，它是一种把享受大自然乐趣、体育锻炼和游戏集于一身的运动。高尔夫球运动是一种以棒击球入穴的球类运动。如今，现代高尔夫球运动已经成为贵族运动的代名词，是中国古代一种名为“捶丸”的球戏演变而来的。 物体之间的相互作用称为“力”。当物体受其他物体的作用后，能使物体获得加速度（速度或动量发生变化）或者发生形变的都称为“力”。它是物理学中重要的基本概念。在力学的范围内，所谓形变是指物体的形状和体积的变化。所谓运动状态的变化指的是物体的速度变化，包括速度大小或方向的变化，即产生加速度。力是物体（或物质）之间的相互作用。 构建步骤： 高尔夫程序设计： 高尔夫模型完成了，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"DPJ-047-鳄鱼机器人","slug":"瓦力工厂/DPJ-047-鳄鱼机器人","date":"2018-12-18T13:10:43.105Z","updated":"2018-11-25T03:40:39.000Z","comments":true,"path":"2018/12/18/瓦力工厂/DPJ-047-鳄鱼机器人/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/DPJ-047-鳄鱼机器人/","excerpt":"","text":"情景任务:一条鳄鱼患了蛀牙，去看牙医，鳄鱼在心里对着自己不停滴说：“我真的不想看到他，但是我非看不可。而诊所里的牙医也在想：”我真的不想看到他，但是我非看不可“。鳄鱼看到牙医吓得叫出了声：啊！牙医看到鳄鱼吓得叫出了声：啊！鳄鱼看着椅子：我一定得去吗？牙医看着鳄鱼：我一定得去吗？鳄鱼坐到了椅子上：我好害怕。牙医拿起了牙钻：我好害怕。鳄鱼对自己说：我一定要勇敢。牙医对自己说：我一定要勇敢。鳄鱼张大了嘴巴：我做好最坏的打算了。牙医把手伸进了鳄鱼的嘴巴：我做好最坏的打算了。鳄鱼被牙钻钻痛了：哎哟！牙医的手被鳄鱼的嘴咬痛了：哎哟！鳄鱼捂着嘴巴：这是一件多么可怕的事。牙医捂着手腕：这是一件多么可怕的事。鳄鱼又张大了嘴巴：不用太久……牙医又把手伸进了鳄鱼的嘴巴：不用太久……鳄鱼给牙医行了个礼：多谢您啦！明年再见。牙医给鳄鱼还了个礼：多谢您啦！明年再见。 可走出诊所的鳄鱼却在想：我明年真的不想再见到他……牙医在窗口看着鳄鱼也在想：我明年真的不想再见到他……鳄鱼说：所以我一定不要忘记刷牙。牙医说：所以你一定不要忘记刷牙。 知识点拓展：概率学随机概念为各时间发生的概率相同，统计随机概念为一个件的结果不受事件的影响或影响较小。 任务分解：１．需要外界能量提供动力２．需要触碰开关感受到信号。３．需要通过触碰开关信号，控制车轮运动。 器材分解：电池盒、马达、CPU、LED灯、触碰开关、附件 学习目标：1.学习触碰开关工作原理.2.学习保险杠机器人的工作原理。3.熟练应用 while、break和触碰开关模块编程。 构建步骤： 鳄鱼机器人程序设计：鳄鱼机器人已完成，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"DPJ-029-避障机器人","slug":"瓦力工厂/DPJ-029-避障机器人","date":"2018-12-18T13:10:43.105Z","updated":"2018-11-15T02:04:51.000Z","comments":true,"path":"2018/12/18/瓦力工厂/DPJ-029-避障机器人/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/DPJ-029-避障机器人/","excerpt":"","text":"情景任务:瓦力工程师接到一个新任务，就是设计出一套智能避障装置，然后研发出智能避障机器人，来装备到一家大型的综合餐厅，能给每位顾客送饭。 知识点拓展：红外避障传感器基本原理：利用物体的反射性质。在一定范围内，如果没有障碍物，发射出去的红外线，因为传播距离越远而逐渐减弱，最后消失。如果有障碍物，红外线遇到障碍物，被反射到达传感器接收头。传感器检测到这一信号，就可以确认正前方有障碍物，并送给单片机，单片机进行一系列的处理分析，协调小车两轮工作，完成一个漂亮的躲避障碍物动作。超声波其实就是声波的一种，因为频率高于20kHz，所以人耳听不见，并且指向性更强。 超声波测距的原理比红外线更加简单，因为声波遇到障碍物会反射，而声波的速度已知，所以只需要知道发射到接收的时间差，就能轻松计算出测量距离，再结合发射器和接收器的距离，就能算出障碍物的实际距离，如下图所示。超声波测距相比红外测距，价格更加便宜，相应的感应速度和精度也逊色一些。同样，由于需要主动发射声波，所以对于太远的障碍物，精度也会随着声波的衰减而降低，此外，对于海绵等吸收声波的物体或者在大风干扰的情况下，超声波将无法工作。 任务分解：１．需要外界能量提供动力２．需要有轮子（为什么呢？观察生活）３．需要有前进、停止、转弯、后退的控制方法5.需要有避障系统。 器材分解：电池盒、轮子、CPU、触碰开光、LED灯、红外避障传感器。 学习目标：1.了解避障机器人工作原理2.了解红外避障传感器的工作原理3.搭建标准避障小车。 构建步骤： 避障机器人程序设计：避障机器人完成了，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"感应机器人","slug":"瓦力工厂/感应机器人","date":"2018-12-18T13:10:43.105Z","updated":"2018-11-16T11:07:23.000Z","comments":true,"path":"2018/12/18/瓦力工厂/感应机器人/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/感应机器人/","excerpt":"","text":"情景任务:小瓦力来到一处神秘的宫殿，瓦力打开宫殿大门，刚走出一步，突然感到脚下的石头像一个开关一样咯地响了一声，然后抬头一看，一块石头从正上方掉了下来，看来有机关，危险。迅速后退。不能灵活躲避落石的机器人永远无法通过最后的机关，瓦力心里想到。怎么办呢？有了，用螳螂机器人带我过去。 知识点拓展：螳螂是昆虫中体型偏大的，体长一般55到105毫米，非洲的螳螂是世界最螳螂螳螂(13张) 大的，身体流线型，以绿色，褐色为主，也具有花斑的种类；标志性特征是有两把“大刀”，即前肢，上有一排坚硬的锯齿，大刀钩末端长有攀爬的吸盘。头部呈扇形，较小；复眼突出，大而透亮，以黄绿色为主，晚上在灯光下呈现黑色，单眼，在两眼之间有3个小点即单眼；触角细长；颈部可180度转动；咀嚼式口器，上颚强劲。前足腿节和胫节有利刺，胫节镰刀状，常向腿节折叠，形成可以捕捉猎物的前足；前翅轻柔，遮住身体全部为覆翅，后翅比前翅要薄，边缘透明色，中间成放射状的紫红色、伸展开呈现扇状，休息时收敛和前翅相合；腹部肥大。前足锋利发达善于捕捉，中、后足适于步行，但有时前足也会用来保持平衡，发育呈变态发育。 红外避障传感器基本原理：利用物体的反射性质。在一定范围内，如果没有障碍物，发射出去的红外线，因为传播距离越远而逐渐减弱，最后消失。如果有障碍物，红外线遇到障碍物，被反射到达传感器接收头。传感器检测到这一信号，就可以确认正前方有障碍物，并送给单片机，单片机进行一系列的处理分析，协调小车两轮工作，完成一个漂亮的躲避障碍物动作。超声波其实就是声波的一种，因为频率高于20kHz，所以人耳听不见，并且指向性更强。 任务分解：１．需要外界能量提供动力２．需要有轮子（为什么呢？观察生活）３．需要有前进、后退、转弯的控制方法（不能手动） 器材分解：电池盒、马达、轮子、CPU、红外避障传感器、附件 学习目标：课程目标：1.自然界的光线2.红外传感器的原理3．如果那么模块的使用 构建步骤： 接力赛机器人程序设计：感应机器人已完成，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"DPJ-025-送餐机器人单巡线","slug":"瓦力工厂/DPJ-025-送餐机器人单巡线","date":"2018-12-18T13:10:43.105Z","updated":"2018-12-15T03:24:59.000Z","comments":true,"path":"2018/12/18/瓦力工厂/DPJ-025-送餐机器人单巡线/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/DPJ-025-送餐机器人单巡线/","excerpt":"","text":"情景任务:瓦力来到了一个特殊的餐厅，这里的服务员只有机器人。点菜、送餐、结账都是由机器人来完成，瓦力对送餐机器人很感兴趣，并发现了一个奇怪的方，每个送餐机器人的脚下都有一条黑线，他们会沿黑色的线行走。瓦力回家查阅资料才明白，原来是利用红外线巡线原理完成的，聪明的瓦力工程师们，让我们一起制作一个巡线机器人吧。 学习目标：1.单巡线机器人的原理。 2.单巡线机器人搭建时重心的稳定。 3.单巡线机器人的编程逻辑。 知识点拓展：随着科技的发展，已经有一些餐厅使用机器人送餐了。在餐厅营业期间，机器人脚底踩着轨道，手上稳稳端着托盘，沿着提前铺设好的环形轨道，面带微笑，端着酒水送着食物。客人可以在行走期间随意将食品拿到桌上，机器人也会沿着轨道继续前行。由于器人是根据设程序设定沿轨道前行，一旦有人出现在行驶路线上，红外感应器就会反应，机器人会自动停下，并语音提示，可以保证店内食客的安全。红外传感器特性：1.反射 ： 在有效范围内，红外线发射管发射的红外线可以被反射，接收管接收到信号。2.吸收： 发射管发出的红外线遇到黑色物体时，会被吸收掉，没有返回信号。 任务分解：１．需要外界能量提供动力 ２．需要有轮子。 ３．需要有黑线的检测原件。 器材分解：电池盒、CPU、轮子、蜂鸣器、LED灯、红外传感器。 构建步骤： 送餐机器人程序设计： 送餐机器人完成了，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"DPJ-024-安检门机器人","slug":"瓦力工厂/DPJ-024-安检门机器人","date":"2018-12-18T13:10:43.105Z","updated":"2018-12-06T02:35:06.000Z","comments":true,"path":"2018/12/18/瓦力工厂/DPJ-024-安检门机器人/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/DPJ-024-安检门机器人/","excerpt":"","text":"情景任务:瓦力工厂要举办一场机器人大赛，门票卖出去了几千张，预计比赛当天会人山人海，瓦力工厂要求我们瓦力工程师为机器人大赛设计安检门系统，这种问题在我们瓦力工程师看来，当然是小菜一碟。 学习目标：1.了解地铁安检及作用。 2.搭建安检门。 3.红外传感器的编程逻辑。 知识点拓展：当我们上地铁的时候也要通过安检。然后刷卡通过闸机乘坐地铁。今天我们来制作一个既可以安检，又可以当做闸机的机器人。闸机是一种通道阻挡装置。用于管理人流，并规范行人出入，主要应用于地铁闸机系统，收费检票。闸机系统起最基本，最核心的功能是实现一次只能通过一人，可以用于各种收费门禁场合的入口通道。 任务分解：１．需要外界能量提供动力 ２．需要有通行检测系统 ３．需要有开门、关门的控制方法 4 ．需要有通行提醒装置 器材分解：电池盒、CPU、蜂鸣器、LED灯、红外传感器。 构建步骤： 安检门机器人程序设计： 安检门机器人完成了，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"DPJ-048-六足昆虫机器人","slug":"瓦力工厂/DPJ-048-六足昆虫机器人","date":"2018-12-18T13:10:43.105Z","updated":"2018-12-02T14:03:39.000Z","comments":true,"path":"2018/12/18/瓦力工厂/DPJ-048-六足昆虫机器人/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/DPJ-048-六足昆虫机器人/","excerpt":"","text":"情景任务:瓦力在打扫卫生的时候钥匙掉到了桌子底下，怎么办，瓦力想，做一个昆虫机器人帮我捡回来，技术在手，什么都有，NO Problem！ 知识点拓展： 任务分解：１．需要外界能量提供动力２．需要有伺服马达控制鱼尾游动。３．需要控制伺服马达的指令。 器材分解：电池盒、马达、伺服马达、CPU、触碰开关、聲音傳感器、附件 学习目标：1.认识昆虫、认识声音传感器.2.仿生搭建昆虫，认识连杆机构.3.声音传感器的使用方法。 构建步骤： 六足昆虫机器人程序设计： 六足昆虫机器人已完成，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"DPJ-049-扎气球机器人","slug":"瓦力工厂/DPJ-049-扎气球机器人","date":"2018-12-18T13:10:43.105Z","updated":"2018-12-16T03:23:46.000Z","comments":true,"path":"2018/12/18/瓦力工厂/DPJ-049-扎气球机器人/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/DPJ-049-扎气球机器人/","excerpt":"","text":"情景任务:有一天瓦力路过了一个庆典，里面正在踩气球，瓦力觉得把气球弄破是一件很有意思的事，何不用这个来做个比赛邀请大家来一起玩呢！ 学习目标：1.学习搭建扎气球机器人。 2.熟练掌握伺服马达应用，高速伺服马达组合应用。 知识点拓展：扎气球机器人手臂连接 任务分解：１．需要外界能量提供动力 ２．需要有轮子。 ３．需要有抬起放下手臂的执行原件。 器材分解：电池盒、CPU、轮子、马达、伺服马达、遥控器。 构建步骤： 扎气球机器人程序设计： 扎气球机器人完成了，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"DPJ-022-宠物狗","slug":"瓦力工厂/DPJ-022-宠物狗","date":"2018-12-18T13:10:43.105Z","updated":"2018-11-24T01:52:34.000Z","comments":true,"path":"2018/12/18/瓦力工厂/DPJ-022-宠物狗/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/DPJ-022-宠物狗/","excerpt":"","text":"情景任务:小瓦力认识一位老爷爷，老爷爷的子女出国工作去了，因此自己一个人在家里很寂寞，想让小瓦力送他一个宠物。小瓦力制作了一只可爱的宠物机器狗送给这位爷爷，陪伴他，让他不再那么寂寞。 知识点拓展：科学家认为狗是由早期人类从灰狼驯化而来，驯养时间在4万年前~1.5万年前，发展至今日。被称为“人类最忠实的朋友”，现如今是饲养率最高的宠物。其寿命约十多年。 红外避障传感器基本原理：利用物体的反射性质。在一定范围内，如果没有障碍物，发射出去的红外线，因为传播距离越远而逐渐减弱，最后消失。如果有障碍物，红外线遇到障碍物，被反射到达传感器接收头。传感器检测到这一信号，就可以确认正前方有障碍物，并送给单片机，单片机进行一系列的处理分析，协调小车两轮工作，完成一个漂亮的躲避障碍物动作。 任务分解：１．需要外界能量提供动力２．需要有轮子（为什么呢？观察生活）３．需要有前进、停止、转弯、后退的控制方法5.需要有避障系统。 器材分解：电池盒、轮子、CPU、蜂鸣器、LED灯、红外避障传感器。 学习目标：1.了解人类最忠实的朋友狗。2.复习红外避障传感器的工作原理3.搭建宠物狗造型避障小车。 构建步骤： 避障机器人程序设计：宠物狗完成了，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"DPJ-018-保险杠机器人","slug":"瓦力工厂/DPJ-018-保险杠机器人","date":"2018-12-18T13:10:43.105Z","updated":"2018-11-24T03:55:30.000Z","comments":true,"path":"2018/12/18/瓦力工厂/DPJ-018-保险杠机器人/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/DPJ-018-保险杠机器人/","excerpt":"","text":"情景任务:瓦力探险队在中国西部发现了一个很大的地下洞穴,但由于不清楚洞穴中是否有毒气,因此需要一个探测机器人进入洞穴进行探测,只能靠机器人自己在洞穴中躲避障碍物。现在，瓦力探险队把这个难题抛给瓦力工程师，作为瓦力工程师的我们，我们有责任和义务帮助瓦力探险队尽快设计出这种探测机器人。 知识点拓展：开关的词语解释为开启和关闭。它还是指一个可以使电路开路、使电流中断或使其流到其他电路的电子元件。最常见的开关是让人操作的机电设备，其中有一个或数个电子接点。接点的“闭合”（closed）表示电子接点导通，允许电流流过；开关的“开路”（open）表示电子接点不导通形成开路，不允许电流流过。机械轻触开关：仍然是传统的按钮开关，只是改进后行程短，所需按下的距离小而已。 任务分解：１．需要外界能量提供动力２．需要触碰开关感受到信号。３．需要通过触碰开关信号，控制车轮运动。 器材分解：电池盒、马达、CPU、LED灯、触碰开关、附件 学习目标：1.学习触碰开关工作原理.2.学习保险杠机器人的工作原理。3.熟练应用 while、break和触碰开关模块编程。 构建步骤： 保险杠机器人程序设计：保险杠机器人已完成，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"橡皮筋枪","slug":"瓦力工厂/橡皮筋枪","date":"2018-12-18T13:10:43.105Z","updated":"2018-12-07T06:53:39.000Z","comments":true,"path":"2018/12/18/瓦力工厂/橡皮筋枪/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/橡皮筋枪/","excerpt":"","text":"情景任务:大家都看过战狼2吧，主人公冷锋（吴京 饰）遭遇人生滑铁卢，被“开除军籍”，本想漂泊一生的他，正当他打算这么做的时候，一场突如其来的意外打破了他的计划，突然被卷入了一场非洲国家叛乱，本可以安全撤离，却因无法忘记曾经为军人的使命，孤身犯险冲回沦陷区，带领身陷屠杀中的同胞和难民，展开生死逃亡。随着斗争的持续，体内的狼性逐渐复苏，最终孤身闯入战乱区域，为同胞而战斗。看完战狼2，你一定会为影片中林林总总的枪支而着迷，为影片中精彩绝伦的枪战而惊呼，现在咱们一起来做咱们的橡皮筋枪吧。 学习目标：1.认识触碰开关。 2.能用如果那么控制语句进行编程。 3.进行橡皮筋枪的搭建。 知识点拓展：如果机械能守恒的前提下有：机械能=势能+动能。 机械能守恒下，动能与势能之间可以完全的相互转化，且总量不变。 机械能是动能与势能的总和，这里的势能分为重力势能和弹性势能。我们把动能、重力势能和弹性势能统称为机械能。决定动能的是质量与速度；决定重力势能的是质量和高度；决定弹性势能的是劲度系数与形变量。机械能只是动能与势能的和。机械能是表示物体运动状态与高度的物理量。物体的动能和势能之间是可以转化的。在只有动能和势能相互转化的过程中，机械能的总量保持不变，即机械能是守恒的。 任务分解：１．需要外界能量提供动力 ２．需要有橡皮筋枪的发射系统 器材分解：电池盒、CPU、触碰开关、马达 构建步骤： 橡皮筋枪程序设计： 思考1.怎么提高橡皮筋枪的射程2.你能给橡皮筋枪发射时加上响声吗？ 橡皮筋枪完成了，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"Scratch3.0-打地鼠","slug":"瓦力工厂/Scratch3.0-打地鼠","date":"2018-12-18T13:10:43.105Z","updated":"2018-12-05T06:31:03.000Z","comments":true,"path":"2018/12/18/瓦力工厂/Scratch3.0-打地鼠/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/Scratch3.0-打地鼠/","excerpt":"","text":"情景任务:输入IP地址 http://192.168.0.103:8061/ 打开Scratch3.0 客户端 从ftp 服务器上下载所需的素材文件夹 点击上传背景图，上传desert.jpg 删除默认的角色 点击上传角色，依次上传角色洞、地鼠、火花、锤子。 添加程序所需的变量：地鼠个数、总分、时间。 /瓦力.jpeg)","categories":[],"tags":[]},{"title":"Scratch3.0本地部署遇到的坑与井","slug":"瓦力工厂/Scratch3.0本地部署遇到的坑与井","date":"2018-12-18T13:10:43.105Z","updated":"2018-12-04T15:56:45.000Z","comments":true,"path":"2018/12/18/瓦力工厂/Scratch3.0本地部署遇到的坑与井/","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/Scratch3.0本地部署遇到的坑与井/","excerpt":"","text":"Scratch cloneScratch3.0 已经大致完工，界面漂亮，但是要访问其官网则需要科学上网，其速度也非常慢。想要和学生一起随着3.0成长则不免要本地部署。Scratch3.0 在github上的位https://github.com/LLK我们只需要scratch-gui，于是一行如下代码git clone git@github.com:LLK/scratch-gui.git10k/s,多久没有这么慢的速度了，工作的时候电脑下载了，下载了2天没有下载完成。各种断开重来。于是在网上查资料，得到曲线救国的方案。git clone –depth=1 git@github.com:LLK/scratch-gui.git只下载最新一层的更新，然后在项目目录下：git fetch –unshallow #转换为一个完整的仓库git 完成后，运行命令：nmp installnmp start本地Scratch3.0已经可以运行，心中美美的。接着在局域网另一台电脑上输入本机IP地址，悲剧了，连不上。接着找资料，各种论坛狂逛，有一篇说是安装Scratch-www的可以访问，于是Scratch-www、Scratch-wm、等等一并下载安装。满怀期待这样就能解决局域网连接问题，然而，确是伴随着一系列的解决问题时的失望。接着就和webpack较上了劲。webpack-dev-server的使用一阵狂查，网上各种帖说webpack-dev-server有默认本机访问，局域网访问需要指定本机IP地址。按帖子的方法一个个实验，都是无功而返。一不做二不休，问题还是要解决的，于是我上webpack-dev-server的官网，英文说明书一阵狂看，有点费劲，继而找到中文最新官方文档，从头看到尾，终于找到解决方案。https://github.com/webpack/webpack/releaseshttps://webpack.docschina.org/concepts/https://webpack.docschina.org/configuration/dev-server devServer.hoststring 指定使用一个 host。默认是 localhost。如果你希望服务器外部可访问，指定如下： module.exports = { //… devServer: { host: ‘0.0.0.0’ }};通过 CLI 使用 webpack-dev-server –host 0.0.0.0 按照官方最新文档进行配置，然而…突然想起在安装Scratch需要在root权限下，于是切换到root npm start …算了，用nginx 架站来处理吧。于是看到 …2.调整防火墙，以免出现各种问题$ sudo ufw app list对，ufw，于是查询ufw文档http://wiki.ubuntu.org.cn/Ufw%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97于是简单粗暴ufw disable在局域网另一台电脑上登录，一下子天朗气清，所有问题都解决了。突然想起前几天配置ftp服务器失败，一定和 ufw有关，因为ftp服务器不只搭建一次了。看来要好好熟悉一下ufw了 什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"DPJ-023-悬崖勒马机器人","slug":"瓦力工厂/DPJ-023-悬崖勒马机器人 ","date":"2018-12-18T13:10:43.105Z","updated":"2018-12-06T09:05:16.000Z","comments":true,"path":"2018/12/18/瓦力工厂/DPJ-023-悬崖勒马机器人 /","link":"","permalink":"http://yoursite.com/2018/12/18/瓦力工厂/DPJ-023-悬崖勒马机器人 /","excerpt":"","text":"情景任务:小瓦力来到了一处崎岖的山路，本来有一座吊桥可以通过，但是吊桥断了，只能绕着盘旋的山路行走了。山路上有巨石路的两侧是悬崖，这样的路怎样才能通过呢？小瓦力灵机一动，制作了一个既可以躲避障碍又可以防止跌落悬崖的智能机器人载着小瓦力出发了。 知识点拓展：“悬崖勒马”这句成语就是用来比喻人到了危险的边缘而及时回头。清代.纪昀的《阅微草堂笔记.卷八.如是我闻二》中也有一段故事，说到一位书生借宿在京城的云居寺。认识了同住的一个约十四五岁的童子，两个人非常要好。后来才知道这个童子是“杏花精”变的。虽然童子辩称“精”和“魅”不同，却无法不承认，他亲近书生是为了吸其精气，让自己化成人形。书生警觉到这和鬼魅没有不同，立即推开童子离去。所以纪昀称赞他说:“书生悬崖勒马，可谓大智慧矣。”意思就是说这位书生能警悟险境，及时回头，是具有很高的智慧啊! 任务分解：１．需要外界能量提供动力２．需要有轮子（为什么呢？观察生活）３．需要有前进、停止、转弯、后退的控制方法4.需要有“悬崖检测”系统。 器材分解：电池盒、轮子、CPU、蜂鸣器、LED灯、红外传感器。 学习目标：1.复习选择模块。2.选择模块的嵌套使用。3.红外传感器的不同搭建方式的应用。 构建步骤： 悬崖勒马机器人程序设计：悬崖勒马机器人完成了，有什么疑问，加老师微信进行咨询吧！","categories":[],"tags":[]},{"title":"全国青少年机器人技术等级考试---跷跷板","slug":"技术等级考试/第三章跷跷板","date":"2018-12-18T13:10:43.029Z","updated":"2018-11-08T08:39:14.000Z","comments":true,"path":"2018/12/18/技术等级考试/第三章跷跷板/","link":"","permalink":"http://yoursite.com/2018/12/18/技术等级考试/第三章跷跷板/","excerpt":"","text":"考试安排如下，详询瓦力工厂工作人员！跷跷板是我国一种民间游戏，所用器材是由一块中间有横轴的条形厚木板架在支柱上。两个小朋友对坐两端轮流用脚蹬地是一端翘起。另一端下落，如此反复。 探索在玩跷跷板时，我们会发现，越是重量大的小朋友越容易压下来，而体重轻的小朋友就不容易压下来把对方翘起来，重量轻的小朋友。可能会发现一个现象。当他努力往后坐的时候就能够把比自己重的小朋友翘起来。 制作下面我们先来制作一个跷跷板吧，跷跷板通常有翘板和支架两个部分组成，我们也按照照样的组成来制作跷跷板。 制作有座椅的翘板￼制作一个支架将支架和壳板通过一个短轴连在一起￼ 杠杆原理￼在前面的内容当中，我们说过扳手利用的时杠杆原理，而跷跷板就是最基本的杠杆结构。￼杠杆是能绕某一固定点转动的杆，对于翘翘板来说，翘板这个杆能够绕支架上的点旋转儿扳手，这个杆能够绕螺丝的中心轴旋转，在-杆结果中那个固定的点称为支点，支点两边的力的关系是: 一边的重量X物体到指定的距离=另一边的重量X另一边物体到支点的距离 杠杆原理的公式是: 在跷跷板中，当一边小朋友的重量乘以它到支点的距离等于另一边小朋友的重量乘以它到支点的距离时，跷跷板是平衡的，否则就是那边乘积大哪边会往下沉。小朋友坐的位置离中心支点的距离一样时，跷跷板为一种等臂杠杆，此时哪边小朋友重量大，哪边就会沉下来。而如果重量轻的小朋友尽量的向后排座，此时它到支点的距离变大了，重量和距离的乘积也变大了，这样重量轻的小朋友就可能把比自己重的小朋友翘起来了。 杠杆的起源古希腊科学家阿基米德有一句流传很久的名言，给我一个支点，我就能撬起整个地球。这句话说的便是杠杆原理。推动地球的说法是他在亚力山大留学时候的事。￼当时他从埃及农民提水用的吊杆和奴隶们撬石头用的撬棍受到启发，发现可以借助一种杠杆来达到省力的目的，同时还发现手握的地方到支点的这一段距离越长，就越省力气。由此他提出了这样一个定理，力臂和力的关系成反比，这就是杠杆原理用现代的表达是表述就是动力X动力臂=阻力X阻力臂。为此，他曾给当时的国王亥尼洛写信，说我不会吹飞之力就可以随便移动任何重量的东西，只要给我一个支点，给我一根足够长的-杆，我连地球都可以推动。阿基米德在论《平面图形的平衡》一书中，最早提出了杠杆原理。他首先把杠杆实际应用中的一些经验知识当作不证自明的公理。然后从这些公理出发，运用几何学通过严密的逻辑论证，得出了杠杆原理。杠杆原理的五要素是：动力点：是杠杆转动的力叫做动力使力的点叫做动力作用点。动力臂：从支点到动力作用线的垂直距离叫做动力臂。支点：杠杆绕着转动的固定点叫做支点。阻力点：阻碍杠杆转动的力叫做阻力。使力的点叫阻力作用点。阻力臂：从支点到阻力作用线的垂直距离叫做阻力臂。 杠杆的分类 生活中的杠杆按照施加动力的大小，分为省力杠杆，费力杠杆和等臂杠杆。 杠杆的应用我们在生活中应用杠杆原理的时候，并不是都要使用省力杠杆，而是要看具体的情况，有些情况下，为了省力，有些情况下是为了节省距离，为了省力，就应该用动力臂比阻力臂长的杠杆。为了省距离，就应该用动力臂比阻力臂短的杠杆。 在杠结构中，要想省力，就必须多移动距离要想少移动距离，就必须多费些力。要想又省力而又少移动距离，是不可能实现的。￼下面我们就来列举一些生活中常见的-杆结构，大家可以分析一下其中包含的-杆五要素。费力杠杆：镊子，钓鱼竿，筷子。费力杠杆的应用主要是为了省距离。 省力杠杆：榨汁机，胡桃夹，门把手，扳手，铁钳、指甲刀等省力杠杆的应用是为了省力。等臂杠杆：天平主要用来测量两测物体质量。￼","categories":[],"tags":[]},{"title":"瓦力工厂许昌校区风采","slug":"技术等级考试/瓦力工厂许昌校区风采","date":"2018-12-18T13:10:43.017Z","updated":"2018-11-09T10:10:17.000Z","comments":true,"path":"2018/12/18/技术等级考试/瓦力工厂许昌校区风采/","link":"","permalink":"http://yoursite.com/2018/12/18/技术等级考试/瓦力工厂许昌校区风采/","excerpt":"","text":"瓦力工厂简介：瓦力工厂少儿编程教育是北京优游宝贝教育咨询有限公司旗下品牌，是中华人民共和国教育部、中国青少年活动中心、中国科学协会、中国电子学会等国家行政管理部门及国家级学术非盈利社团指定的青少机器人研发及培训机构，是北京市海淀区社会资源单位、青少年校外教育实践基地；瓦力工厂机器人一直秉承着“阳光、责任、梦想”的教育理念，专注于3-17岁青少年科技动手创新能力的培养，是集科技产品、创新课程、国际机器人赛事、青少年科技交流于一体的科技创新教育品牌。使学生在快乐的氛围下养成主动探究式学习多学科的知识、进而培养领导力、动手能力、语言组织、逻辑思维、团队协作等能力，并最终形成独立解决科学研究和其他社会问题的目标。从2010年起一直致力于科技产品与服务的研发与传递，目前拥有自主知识产权的机器人两个套系、八个型号，以及系列连贯的课程体系，为幼儿园、小学、 中学、文化宫提供机器人教育课程及整体解决方案；目前在北京开设有学习中心30余家，在全国累计有学习中心200余家，截至目前已经为500000名学生及机器人技术爱好者提供了教育指导服务，且广受家长及社会好评。 课程与服务1、Scratch 编程Scratch是一款由麻省理工学院(MIT) 设计开发的一款面向少年的简易编程工具。在2012年在中国得到普及，2013在上海举行比赛。针对7岁以上孩子们的认知水平，以及对于界面的喜好，MIT 做了相当深入研究和颇具针对性的设计开发。不仅易于孩子们使用，又能寓教于乐，让孩子们获得创作中的乐趣。Scratch 的下载和使用是完全免费的，开发了Windows系统，苹果系统，Linux系统下运行的版本。 提升孩子逻辑思维能力趣味化编程锻炼孩子的思维能力，抓住孩子思维提升的黄金期。 提升创造力和学习兴趣趣味化的编程方式提升孩子学习兴趣，严密的编程语言是提升孩子专注力的最佳工具。 培养孩子专注力与耐心编程可以把科学，艺术，语言等学科完美融合在一起，让孩子在编程中把复杂的知识灵活的学以致用。 为升学助力国务院发展规划通知要求，在中小学阶段逐步推广编程教育部分省份变成一进入高考考纲。 图形化编程入门， 拖动鼠标即可写出代码瓦力工厂采用麻省理工开发，哈佛大学力推的 Scratch 图形化编程语言作为入门符合7-12岁孩子的认知发展，让孩子学习编程变得更容易 2、单片机机器人课机器人采用印刷电路板作为主要结构件，螺丝进行板材件的连接，以图形化编程为主的单片机机器人课程着重培养孩子的逻辑思维能力，通过每堂课四大块九小节的课堂设置，提高孩子认识事物，分析事物，解决问题的能力。单片机机器人课二、是互动动手的课程，老师讲解，导入后，需要学生应用教具进行实操训练，这就要求学生需要人手一套教具。仅仅通过观看老师操作，起不到应有的教学效果 举办校内比赛可以和校方一起举办校内兴趣比赛，丰富学生的知识文化生活，比如：Scratch编程挑战赛、参照IRO挑战赛的超级冰壶比赛、机器人足球赛等等趣味比赛。Scratch编程挑战赛：给定素材，给定已经完成的程序的展示，给定程序要求。通过时间与给定功能的实现度来进行挑战赛成绩判定。超级冰壶比赛：碰撞球对抗赛（超级冰壶赛）分小学组、初中组和高中组。每队由 2 名队员配合，每场同时两个队进行比 赛，双方机器人对抗，以进球的分为目的，比赛结束时获取积分多的一方获胜。 机器人擂台挑战赛不限制参赛机器人平台，要求：机器人必须为遥控机器人，但并不限制为 无线遥控机器人。不能搭建以损坏对方机器人或比赛场地为目的的结构。机器人展开尺寸不 能超过25cm25cm25cm。机器人世界杯：2对2机器人足球比赛规则经过几次调整，基本达到强调机器人足球比赛中的技术而不是一味比拼速度和力量的目的，加强了对参赛学生能力的考核，对机器人足球的正常发展是有益的。 组织考级全国青少年机器人技术等级考试考前集训，考试辅导。分为笔试部分与实操部分辅导。 国际、国内机器人比赛比如：IRO 大赛 国际机器人奥林匹克大赛（International Robot Olympiad）简称IRO，于1998年创立，由国际机器人奥林匹克委员会(IROC)每年举办的国际性机器人比赛 1999年开始第一届国际机器人奥林匹克大赛，2017年将是第十九届国际机器人奥林匹克大赛 IRO是经联合国教科文组织的指导与监督下举办的第一个国际机器人大赛 比赛可媲美数学奥林匹克大赛和物理奥林匹克大赛，通过机器人大赛给学生们提供一个交流科学技术的平台，激发孩子们的潜能，培养他们用自己的能力创造、科学使命意识及操作机器人 比赛分为竞赛与创意两种类，竞赛类比赛中各组别必须建构机器人和编写程式来解决特定题目，创意类比赛中各组针对特定主题自由设计机器人模型并展示 现国际机器人奥林匹克大赛参赛国家为31国，参赛总人数超过10万人http://www.irochina.com/bbs/board.php?bo_table=game_pr ￼","categories":[],"tags":[]},{"title":"全国青少年机器人技术等级考试---秋千","slug":"技术等级考试/第二章秋千","date":"2018-12-18T13:10:43.017Z","updated":"2018-11-08T02:36:11.000Z","comments":true,"path":"2018/12/18/技术等级考试/第二章秋千/","link":"","permalink":"http://yoursite.com/2018/12/18/技术等级考试/第二章秋千/","excerpt":"","text":"考试安排如下，详询瓦力工厂工作人员！秋千是一种运动器具，或者是游戏用具，我们在公园、学校、或者社区都能看到。小朋友坐在座椅上，由他人推动或自己的脚用力，人随座椅来回摆动。 秋千的起源说起秋千可以追溯到几十万年前的上古时代。那是我们的祖先为了谋生，需要上树采摘野果或猎取野兽。在攀援和奔跑中，他们抓住粗壮的蔓生植物。依靠藤条的摇荡摆动，上树或跨越沟涧，这应该是秋千的原始雏形。春秋时期，我国北方有了将绳索悬挂于木架下，下面装上踏板的秋千。如今公园，社区处处可见秋千，认真观察秋千会发现，一般来说秋千的支架两边都是由三角形构成的。那么，为什么秋千的支架都是三角形的呢？用长条和螺丝分别制作出三角形和四边形，用手推动一个角。会发现有什么变化吗？ 实验证明三角形结构和稳定，不会形变而四边形结构在一定力量的挤压下会发生形变。根据三角形和四边形的特性，想一想生活中哪些地方应用到了三角形和四边形呢？金字塔、房子、吊车等需要稳定的结构中都用到了三角形，而在拉伸门等需要变形的结构中，则用到了四边形。 制作秋千通常有框架和底座组成，我们也按照这样的组成来自坐秋千。1.制作秋千的框架。这需要两个稳定的三角形结构。秋千的底座完成整个秋千利用一个圆轴将座椅装在支架上。 ###稳定性分析每个物体都是由简单的图形构成的，也就是说物体的每个面都是由圆、三角形，四边形和多边形构成的。三角形有着稳固、耐压的特点，三角形框架，起重机，三角形吊臂，屋顶，钢架桥中都有三角形的身影。三角形稳定性分析：任取三角形两条边在两条边角度不变的情况下，在两条边的非公共端点连接第三条边。因为第三条边不可伸缩和只弯折，所以两端点距离固定，按照相同的方式任取两条边都符合上述情况。所以三角形固定具有稳定性。 一个结构是否稳定，除了考虑结构外，还要考虑放置的位置和物体的重心。总体来说，要符合一下原则 1.与地面接触面积越大，物体越稳。 2.重心越低，物体越稳。￼3.通过重心做竖直向下的直线与地面的交点，如果在接触面上，则物体较稳，如果在接触面外物体不稳. 能量转化一切物质都具有能量，能量由以多种不同的形式存在。按照物质的不同运动形式分类，能量可分为机械能，化学能，热能，电能，辐射能，核能，光能，潮汐能等。这些不同形式的能量之间可以通过物理效应和化学反应而相互转化。￼秋千中涉及的能量转化是动能和势能之间的转化。动能是物体在运动时具有的能。￼势能包括重力势能和弹性势能，重力势能是物体由于被举高而产生的能量，弹性势能是物体由于弹性形变而产生的能量。机械能是动能和势能的总和，两者之间的转化关系当物体下落时，高度越小，那么它的重力势能就越来越小，但是物体的速度会越来越快，动能也就越来越大，如果不考虑空气阻力的话，机械能是不变的重力势能减小的部分就变成了动能。在荡秋千时，从最低点到最高点的过程中，速度越来越小，而高度越来越大，这时动能转化为重力势能当达到最高点时速度为零，动能为零，全部能量转化为重力势能从最高点下降到最低点的过程中，速度越来越大，而高度越来越小，这时重力势能转化为动能。到达最低点时速度最大，动能最大，重力势能最小。能量守恒，能量不会凭空消失，也不会凭空产生，它只会从一种形式转化为其他形式，或者从一个物体转移到另一个物体，而在转化和转移的过程中，能量的总和保持不变。 能量守恒：能量不会凭空消失，也不会凭空产生，它只会从一种形式转化为其他形式，或者从一个物体转移到另一个物体，而在转化和转移的过程中，能量的总和保持不变。 单摆玩秋千的时候我们可能会发现秋千摆动的幅度越来越小，但摆动一周的时间却没有跟着变短。时间始终是差不多的，这是为什么呢？因为秋千是一个近似的单摆运动（单摆是摆动角度小于100的小幅摆动）。单摆运动的周期T和摆动的幅度以及小朋友的重量无关，而与单摆的长度L（秋千绳索的长度）和重力加速度有关（如果只在地球上进行单摆运动的话，可以认为系也是一个常量）单摆周期公式： 现在人们公认是伽利略发现了单摆的等时性原理，伽利略在比萨教堂里注意到一盏悬灯的摆动，随后用线悬铜球做模拟实验，验证了微小百度的灯时星以及摆长对周期的影响，因此创造出脉搏计用来测量短时间间隔。￼尽管在伽利略之前的好几个世纪等时性早已经为阿拉伯人所熟知，但以科学的态度去研究这一现象的科学家还是首推伽利略。虽然伽利略在1602年注意到了单摆运动，当时他误认为单摆在大摆动条件下也成立。而最早系统地研究单摆的是惠更斯，并且开始用无穷小的机和方法推导出了钟摆的周期公式。","categories":[],"tags":[]},{"title":"全国青少年机器人技术等级考试---基本结构","slug":"技术等级考试/第一章基本结构","date":"2018-12-18T13:10:42.917Z","updated":"2018-11-07T04:00:14.000Z","comments":true,"path":"2018/12/18/技术等级考试/第一章基本结构/","link":"","permalink":"http://yoursite.com/2018/12/18/技术等级考试/第一章基本结构/","excerpt":"","text":"考试安排如下，详询瓦力工厂工作人员！ 结构体在很久很久以前，当人们想要过河的时候，会在河的两岸搭一根树干。不过树干搭建的乔并不一定结实，如果树干不够粗的话，很容易在中间断开当人们需要躲避风雨的时候会躲进山洞里，但山洞也不一定安全，里面通常住着凶猛的怪兽。所以就在生活中有目的地搭建一些结构，这种为了实现某种功能而建造的物体叫做结构体，结构体通常是多个物品的连接。 钉子钉子是我们生活中最常见的连接零件，外观如下：钉子指的是尖头状的圆形硬金属(通常是钢)，通常作为固定木头等物用。 螺丝目前在生活中连接时使用最多的是螺丝。螺丝是利用其身上的斜面旋转纹路，通过旋转的形式，循序渐进地进入被固定件中的。在国定物体时，能够在省力的前提下有效的提高安全性，另外如果我们反方向旋转螺丝的话，还能够完好的将螺丝拆下来，并再次将其使用到其他地方。螺丝是一种通称，可大体的分为螺丝钉与螺丝杆，螺丝钉一般叫做木螺丝，他和钉子有点像，只是螺丝的杆身上有螺旋状的纹路，一般用于紧固木板与塑料件。相对于螺丝钉的另一种螺丝是螺丝杆，螺丝杆也叫机螺丝，螺丝杆前端是平头的，通常用来紧固金属机械部件。除了螺丝，图中还有一个六边形的零件叫做螺母，螺丝杆与螺母是配套使用的，螺母的内部有螺旋状的纹路，能够通过旋转固定在螺丝上。 楔和螺旋钉子和螺丝上其实包含了两种最基本的结构–楔和螺旋。楔形是斜面的应用，原指上厚下薄的小木橛，在结构上表示一头尖，一头稍粗的物品。钉子相当于圆柱形的楔形。最早的记录出现在15世纪，当时的木匠们使用木钉或金属钉子把家具和木结构的建筑物连接起来。16世纪时，欧洲最早出现了金属螺母和螺丝。制钉工人开始生产带纹路线的钉子，这些钉子能够更牢固地连接东西。那是从钉子到螺丝钉所跨出的一小步。 钉子上的这种纹路叫螺旋，第一个描述螺旋的人是希腊科学家阿基米德。阿基米德螺旋是一个装在木制圆筒里的巨大螺旋物。它用来把水从一个水平提升到另一个水平，对田地进行灌溉。阿基米德螺旋的发明者并非阿基米德本人，他只是描述了这种已经存在的东西。阿基米德螺旋可能是由古代埃及的能工巧匠们设计并在尼罗河两岸灌溉中使用的。 螺丝刀与扳手在尝试拧螺丝的时候，大家可能发现虽然拧螺丝非常省力，不过，将螺丝和螺母拧紧也不太容易。要想将螺丝和螺母固定紧并需要依靠工具。钉钉子时需要使用的工具是锤子，而拧螺丝需要的工具叫螺丝刀。螺丝刀在1870年前后出现于伦敦。当时工匠们发现，用螺丝刀旋紧螺丝比用锤子敲击，能把东西固定的更好，尤其使用细纹螺丝时。最开始使用的螺丝刀都是一字螺丝刀，1936年，亨利.M.飞利浦为十字头钉槽头螺丝申请了专利，同时制造了十字螺丝刀。与传统一字槽钉头螺丝不同，十字头钉头螺丝在使用螺丝刀时会自动居中，不易滑落，因此深受欢迎。而固定","categories":[],"tags":[]},{"title":"全国青少年机器人技术等级考试---一级模拟试题","slug":"技术等级考试/全国青少年机器人技术等级考试---一级模拟试题","date":"2018-12-18T13:10:42.917Z","updated":"2018-11-06T10:27:21.000Z","comments":true,"path":"2018/12/18/技术等级考试/全国青少年机器人技术等级考试---一级模拟试题/","link":"","permalink":"http://yoursite.com/2018/12/18/技术等级考试/全国青少年机器人技术等级考试---一级模拟试题/","excerpt":"","text":"考试安排如下，详询瓦力工厂工作人员！ 2019年全国青少年机器人技术等级考试","categories":[],"tags":[]},{"title":"","slug":"技术等级考试/教育1","date":"2018-12-18T13:10:42.917Z","updated":"2018-11-13T10:05:10.000Z","comments":true,"path":"2018/12/18/技术等级考试/教育1/","link":"","permalink":"http://yoursite.com/2018/12/18/技术等级考试/教育1/","excerpt":"","text":"“走近机器人，探索科技的奥秘” 随着经济发展对人才的需要，STEAM教育逐步走进人们的视野。根据《未来工作:第四次工业革命的就业、技能和劳动力战略》报告中指出，至2020年，就业市场对拥有解决复杂问题能力和社交技能人才的需要会远远高于对体力和专业技能人才的需要，所以STEAM教育所培养的复合型人才将会是就业市场的主要需求之一。所以中国越来越重视STEAM教育呢？瓦力工厂机器人教育是STEAM教育的重要载体，通过组装、搭建、运行机器人，激发学生学习兴趣、培养学生综合能力。有效锻炼孩子思维逻辑性，解决问题的能力，动手能力，提高专注力，塑造孩子空间思维与创造性。机器人教育通过专门课程的方式，使所有学生普遍掌握关于机器人学的基本知识与基本技能。让孩子掌握事物背后的原理，解决孩子对事物探索的好奇心。","categories":[],"tags":[]},{"title":"","slug":"技术等级考试/教育","date":"2018-12-18T13:10:42.917Z","updated":"2018-11-13T09:51:35.000Z","comments":true,"path":"2018/12/18/技术等级考试/教育/","link":"","permalink":"http://yoursite.com/2018/12/18/技术等级考试/教育/","excerpt":"","text":"“走进机器人，探索科技的奥秘” 瓦力工厂机器人教育是通过组装、搭建、运行机器人，激发学生学习兴趣、培养学生综合能力。有效锻炼孩子思维逻辑性，解决问题的能力，动手能力，提高专注力，塑造孩子空间思维与创造性。机器人教育通过专门课程的方式，使所有学生普遍掌握关于机器人学的基本知识与基本技能。让孩子掌握事物背后的原理，解决孩子对事物探索的好奇心。 一、活动时间:8月12号下午3：00-4：30/4：30-6：00 二、活动地点:亨源通3号楼707瓦力工厂机器人构建中心。 三、活动内容:1、让学生了解机器人的发展和应用现状，理解机器人的概念和工作方式，为进一步学习机器人技术的有关知识打下基础。2、让学生了解机器人各个传感器的功能，学习编写简单的机器人控制程序，提高学生分析问题和解决问题的能力。3、通过机器人竞赛和完成各项任务，使学生在搭建机器人和编制程序的过程中培养动手能力、协作能力和创造能力。4、充分体现了学生的主体地位和老师的主导作用，有目的的培养学生的科学素养。 四、参加人员:三一班假日小队15人","categories":[],"tags":[]},{"title":"DPJ-029-避障机器人","slug":"技术等级考试/DPJ-029-避障机器人","date":"2018-12-18T13:10:42.861Z","updated":"2018-11-15T00:41:06.000Z","comments":true,"path":"2018/12/18/技术等级考试/DPJ-029-避障机器人/","link":"","permalink":"http://yoursite.com/2018/12/18/技术等级考试/DPJ-029-避障机器人/","excerpt":"","text":"情景任务:瓦力工程师接到一个新任务，就是设计出一套智能避障装置，来装备到一家大型的综合餐厅，能给每位顾客送饭。 任务分解：","categories":[],"tags":[]}]}