{"meta":{"title":"卓越趣味编程训练营","subtitle":"陪你不断进步","description":"专注少儿编程、自动化","author":"王俊杰","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"儿童编程Scratch 赢在起跑线","slug":"Scratch 简介","date":"2018-01-18T06:54:14.360Z","updated":"2018-01-18T06:54:14.360Z","comments":true,"path":"2018/01/18/Scratch 简介/","link":"","permalink":"http://yoursite.com/2018/01/18/Scratch 简介/","excerpt":"","text":"Scratch是一种全新的程序设计语言，你可以用它很容易地创造交互式故事情节、动画、游戏，然后还可以把你的作品分享给所有人。开发者表示，这种电脑编程语言的目的，是帮助年轻人发展学习技能，学习创造性思维，以及学习集体合作。MIT（麻省理工学院）媒体实验室的博士生凯伦.布雷南，是Scratch项目的负责人，他说，“我们的目的不是要创办电脑程序编写大军，而是帮助电脑使用者表达自己。” 与其让孩子玩游戏；不如让孩子做编程。 Scratch不是游戏，是一款可以制作游戏、动画的编程工具。一旦掌握了这个工具，孩子们就能自由自在地挥洒它们无限的创意，享受创造的乐趣。Scratch由麻省理工学院媒体实验室开发出来至今，全美有超过100万的孩子在学习Scratch。而在台湾，中小学生的信息化课就是以Scratch为主来上的，也有许多Scratch教学的网站。台湾教育部门每年都会举行程序设计比赛。台湾中小学的教育，通过Scratch，扩展了语文，数学，外语，音乐，体育，科学的教学深度。 科技使人类的生活发生巨大的变化。就当下的教育而言，孩子科技能力的重要性绝不亚于其他才艺和知识。 根据孩子上课的情况和效果，我们总结了Scratch三大好处。 1、学习Scratch可以培养逻辑思维能力。在大年龄段孩子学习Scratch编程时，会涉及许多数学知识，孩子需要结合学校内学到的数学知识，来解决编程问题。因此，在不断探索的过程中，孩子们的数学知识也会越累越丰富，创作能力也越来越强。 2、学习Scratch可以提高学习的主动性。在Scratch课堂上，我们鼓励孩子自己创作作品。在创作的过程中不仅习得了Science（科学），Technology（技术），Engineering（工程），Arts（艺术），Maths（数学）等多个领域的知识，而且也获得了成就感和满足感。定期校区举办Scratch分享会，让孩子们彼此体验他们自己编程的游戏，互相提出改进方法方式，这个过程大大激励了孩子的成就感和学习欲望。 3、学习Scratch可以激发创造力。Scratch软件的优势是易学且功能强大，有助于孩子们发挥自己的想象力，而在动手创作过程中，他们的学习积极性、想象力和创造力会得到极大的锻炼。孩子们可以用Scratch中已有的素材，发挥自己的想象力制作游戏、动画，还可以自己设计素材。孩子只要敢想，在我们的指导下，就能完成他们心目中的游戏。 儿童编程和程序员的编程有什么区别？ 归于一句话“孩子编程看兴趣，大人编程看薪水。” 儿童编程使用简易的编程软件进行编程思想和思维方式的锻炼，核心的理念是在把计算机编程融合孩子兴趣的同时，加强孩子思维能力的锻炼，在中国的大多数的儿童编程学习中，均将学科知识与编程知识相融合的方式进行授课教学。这在中国是有一定原因的：传统的中国式教育是以升学为目的的，只有将学科知识融入到编程学习中，家长才会乐于让孩子去接触。而成人的程序编程主要学的是程序语法的应用和实践，他主要偏向的是计算机编程的项目开发。 相对于在学校信息课上所学的知识来说，用于初学者教学，Scratch有以下这些优点： 1、入门简单，无关原有编程基础，适合中小学学生初次学习编程语言时使用； 2、内容丰富，针对有兴趣、喜爱绘画的学生，提供角色绘制设计功能； 3、通过使用Scratch，让学生在动画、游戏设计过程中逐渐形成逻辑分析、独立思考创新的思维方式，学会提出问题，解决问题； 4、相比其他编程软件，Scratch更加直观，学生能比较容易地看到自己的劳动成果。 学习编程最基本的是编程概念的掌握，Scratch以积木的形式进行编程，8个编程部件涵盖了常见的编程概念。学习编程最重要的是编程思想的培养，在程序学习中培养学生利用编程解决问题的能力。 学生在学会了编程的基本原理和方法后，会有兴趣也有能力将动画和游戏编写得更逼真，更好玩。在修改动画游戏脚本的过程中，学生不断提出问题，解决问题，根据自己的需求进行分析，设定合适的角色和相应的脚本，最终实现程序。","categories":[],"tags":[]},{"title":"","slug":"FirstNight","date":"2017-12-25T16:19:24.588Z","updated":"2017-12-25T15:43:43.388Z","comments":true,"path":"2017/12/26/FirstNight/","link":"","permalink":"http://yoursite.com/2017/12/26/FirstNight/","excerpt":"","text":"title: First Night 我有一头小毛驴，可是我从来都不骑。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2017-12-25T15:53:31.397Z","updated":"2017-12-25T15:53:31.397Z","comments":true,"path":"2017/12/25/hello-world/","link":"","permalink":"http://yoursite.com/2017/12/25/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}